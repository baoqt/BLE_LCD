

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Jun 04 17:17:54 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18324
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.05
    27                           ; Generated 20/12/2018 GMT
    28                           ; 
    29                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F18324 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000E                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  008C                     	;# 
    94  008E                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0097                     	;# 
   101  009B                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010E                     	;# 
   109  0111                     	;# 
   110  0112                     	;# 
   111  0113                     	;# 
   112  0114                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  0118                     	;# 
   117  0119                     	;# 
   118  018C                     	;# 
   119  018E                     	;# 
   120  0197                     	;# 
   121  0199                     	;# 
   122  0199                     	;# 
   123  0199                     	;# 
   124  019A                     	;# 
   125  019A                     	;# 
   126  019A                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019B                     	;# 
   130  019B                     	;# 
   131  019B                     	;# 
   132  019C                     	;# 
   133  019C                     	;# 
   134  019C                     	;# 
   135  019D                     	;# 
   136  019D                     	;# 
   137  019D                     	;# 
   138  019E                     	;# 
   139  019E                     	;# 
   140  019E                     	;# 
   141  019F                     	;# 
   142  019F                     	;# 
   143  019F                     	;# 
   144  019F                     	;# 
   145  019F                     	;# 
   146  020C                     	;# 
   147  020E                     	;# 
   148  0211                     	;# 
   149  0211                     	;# 
   150  0212                     	;# 
   151  0212                     	;# 
   152  0213                     	;# 
   153  0213                     	;# 
   154  0214                     	;# 
   155  0214                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0216                     	;# 
   161  0216                     	;# 
   162  0217                     	;# 
   163  0217                     	;# 
   164  028C                     	;# 
   165  028E                     	;# 
   166  0291                     	;# 
   167  0291                     	;# 
   168  0292                     	;# 
   169  0293                     	;# 
   170  0294                     	;# 
   171  0295                     	;# 
   172  0295                     	;# 
   173  0296                     	;# 
   174  0297                     	;# 
   175  0298                     	;# 
   176  029F                     	;# 
   177  030C                     	;# 
   178  030E                     	;# 
   179  0311                     	;# 
   180  0311                     	;# 
   181  0312                     	;# 
   182  0313                     	;# 
   183  0314                     	;# 
   184  0315                     	;# 
   185  0315                     	;# 
   186  0316                     	;# 
   187  0317                     	;# 
   188  0318                     	;# 
   189  038C                     	;# 
   190  038E                     	;# 
   191  0391                     	;# 
   192  0392                     	;# 
   193  0393                     	;# 
   194  0397                     	;# 
   195  0398                     	;# 
   196  0399                     	;# 
   197  039A                     	;# 
   198  039C                     	;# 
   199  039D                     	;# 
   200  039E                     	;# 
   201  039F                     	;# 
   202  0411                     	;# 
   203  0411                     	;# 
   204  0412                     	;# 
   205  0413                     	;# 
   206  0414                     	;# 
   207  0415                     	;# 
   208  0416                     	;# 
   209  0417                     	;# 
   210  0418                     	;# 
   211  0418                     	;# 
   212  0419                     	;# 
   213  041A                     	;# 
   214  041B                     	;# 
   215  041C                     	;# 
   216  041D                     	;# 
   217  041E                     	;# 
   218  041F                     	;# 
   219  0498                     	;# 
   220  0498                     	;# 
   221  0499                     	;# 
   222  049A                     	;# 
   223  049B                     	;# 
   224  049B                     	;# 
   225  049C                     	;# 
   226  049D                     	;# 
   227  049E                     	;# 
   228  049F                     	;# 
   229  0617                     	;# 
   230  0618                     	;# 
   231  0619                     	;# 
   232  0619                     	;# 
   233  061A                     	;# 
   234  061B                     	;# 
   235  061C                     	;# 
   236  061C                     	;# 
   237  061F                     	;# 
   238  0691                     	;# 
   239  0692                     	;# 
   240  0693                     	;# 
   241  0694                     	;# 
   242  0695                     	;# 
   243  0696                     	;# 
   244  0697                     	;# 
   245  0698                     	;# 
   246  0699                     	;# 
   247  0711                     	;# 
   248  0712                     	;# 
   249  0713                     	;# 
   250  0714                     	;# 
   251  0715                     	;# 
   252  0716                     	;# 
   253  0717                     	;# 
   254  0718                     	;# 
   255  0719                     	;# 
   256  0891                     	;# 
   257  0891                     	;# 
   258  0891                     	;# 
   259  0891                     	;# 
   260  0891                     	;# 
   261  0891                     	;# 
   262  0892                     	;# 
   263  0892                     	;# 
   264  0892                     	;# 
   265  0893                     	;# 
   266  0893                     	;# 
   267  0893                     	;# 
   268  0893                     	;# 
   269  0893                     	;# 
   270  0893                     	;# 
   271  0894                     	;# 
   272  0894                     	;# 
   273  0894                     	;# 
   274  0895                     	;# 
   275  0895                     	;# 
   276  0895                     	;# 
   277  0896                     	;# 
   278  0896                     	;# 
   279  0896                     	;# 
   280  089B                     	;# 
   281  0911                     	;# 
   282  0912                     	;# 
   283  0913                     	;# 
   284  0914                     	;# 
   285  0915                     	;# 
   286  0916                     	;# 
   287  0918                     	;# 
   288  0919                     	;# 
   289  091A                     	;# 
   290  091B                     	;# 
   291  091C                     	;# 
   292  091D                     	;# 
   293  091E                     	;# 
   294  091F                     	;# 
   295  0E0F                     	;# 
   296  0E10                     	;# 
   297  0E11                     	;# 
   298  0E12                     	;# 
   299  0E13                     	;# 
   300  0E14                     	;# 
   301  0E15                     	;# 
   302  0E16                     	;# 
   303  0E17                     	;# 
   304  0E18                     	;# 
   305  0E19                     	;# 
   306  0E1A                     	;# 
   307  0E1B                     	;# 
   308  0E1C                     	;# 
   309  0E20                     	;# 
   310  0E21                     	;# 
   311  0E22                     	;# 
   312  0E24                     	;# 
   313  0E25                     	;# 
   314  0E28                     	;# 
   315  0E29                     	;# 
   316  0E2A                     	;# 
   317  0E2B                     	;# 
   318  0E2C                     	;# 
   319  0E2D                     	;# 
   320  0E2E                     	;# 
   321  0E2F                     	;# 
   322  0E90                     	;# 
   323  0E91                     	;# 
   324  0E92                     	;# 
   325  0E94                     	;# 
   326  0E95                     	;# 
   327  0EA0                     	;# 
   328  0EA1                     	;# 
   329  0EA2                     	;# 
   330  0EA3                     	;# 
   331  0EA4                     	;# 
   332  0EA5                     	;# 
   333  0F0F                     	;# 
   334  0F10                     	;# 
   335  0F11                     	;# 
   336  0F12                     	;# 
   337  0F13                     	;# 
   338  0F14                     	;# 
   339  0F15                     	;# 
   340  0F16                     	;# 
   341  0F17                     	;# 
   342  0F18                     	;# 
   343  0F19                     	;# 
   344  0F1A                     	;# 
   345  0F1B                     	;# 
   346  0F1C                     	;# 
   347  0F1D                     	;# 
   348  0F1E                     	;# 
   349  0F1F                     	;# 
   350  0F20                     	;# 
   351  0F21                     	;# 
   352  0F22                     	;# 
   353  0F23                     	;# 
   354  0F24                     	;# 
   355  0F25                     	;# 
   356  0F26                     	;# 
   357  0F27                     	;# 
   358  0F28                     	;# 
   359  0F29                     	;# 
   360  0F2A                     	;# 
   361  0F2B                     	;# 
   362  0F2C                     	;# 
   363  0F2D                     	;# 
   364  0F2E                     	;# 
   365  0F2F                     	;# 
   366  0F30                     	;# 
   367  0F31                     	;# 
   368  0F32                     	;# 
   369  0F33                     	;# 
   370  0F34                     	;# 
   371  0F35                     	;# 
   372  0F36                     	;# 
   373  0F37                     	;# 
   374  0FE4                     	;# 
   375  0FE5                     	;# 
   376  0FE6                     	;# 
   377  0FE7                     	;# 
   378  0FE8                     	;# 
   379  0FE9                     	;# 
   380  0FEA                     	;# 
   381  0FEB                     	;# 
   382  0FED                     	;# 
   383  0FEE                     	;# 
   384  0FEF                     	;# 
   385  0000                     	;# 
   386  0001                     	;# 
   387  0002                     	;# 
   388  0003                     	;# 
   389  0004                     	;# 
   390  0005                     	;# 
   391  0006                     	;# 
   392  0007                     	;# 
   393  0008                     	;# 
   394  0009                     	;# 
   395  000A                     	;# 
   396  000B                     	;# 
   397  000C                     	;# 
   398  000E                     	;# 
   399  0010                     	;# 
   400  0011                     	;# 
   401  0012                     	;# 
   402  0013                     	;# 
   403  0014                     	;# 
   404  0015                     	;# 
   405  0015                     	;# 
   406  0016                     	;# 
   407  0016                     	;# 
   408  0017                     	;# 
   409  0018                     	;# 
   410  0019                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  001D                     	;# 
   416  001E                     	;# 
   417  001F                     	;# 
   418  008C                     	;# 
   419  008E                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0094                     	;# 
   425  0097                     	;# 
   426  009B                     	;# 
   427  009B                     	;# 
   428  009C                     	;# 
   429  009D                     	;# 
   430  009E                     	;# 
   431  009F                     	;# 
   432  010C                     	;# 
   433  010E                     	;# 
   434  0111                     	;# 
   435  0112                     	;# 
   436  0113                     	;# 
   437  0114                     	;# 
   438  0115                     	;# 
   439  0116                     	;# 
   440  0117                     	;# 
   441  0118                     	;# 
   442  0119                     	;# 
   443  018C                     	;# 
   444  018E                     	;# 
   445  0197                     	;# 
   446  0199                     	;# 
   447  0199                     	;# 
   448  0199                     	;# 
   449  019A                     	;# 
   450  019A                     	;# 
   451  019A                     	;# 
   452  019B                     	;# 
   453  019B                     	;# 
   454  019B                     	;# 
   455  019B                     	;# 
   456  019B                     	;# 
   457  019C                     	;# 
   458  019C                     	;# 
   459  019C                     	;# 
   460  019D                     	;# 
   461  019D                     	;# 
   462  019D                     	;# 
   463  019E                     	;# 
   464  019E                     	;# 
   465  019E                     	;# 
   466  019F                     	;# 
   467  019F                     	;# 
   468  019F                     	;# 
   469  019F                     	;# 
   470  019F                     	;# 
   471  020C                     	;# 
   472  020E                     	;# 
   473  0211                     	;# 
   474  0211                     	;# 
   475  0212                     	;# 
   476  0212                     	;# 
   477  0213                     	;# 
   478  0213                     	;# 
   479  0214                     	;# 
   480  0214                     	;# 
   481  0215                     	;# 
   482  0215                     	;# 
   483  0215                     	;# 
   484  0215                     	;# 
   485  0216                     	;# 
   486  0216                     	;# 
   487  0217                     	;# 
   488  0217                     	;# 
   489  028C                     	;# 
   490  028E                     	;# 
   491  0291                     	;# 
   492  0291                     	;# 
   493  0292                     	;# 
   494  0293                     	;# 
   495  0294                     	;# 
   496  0295                     	;# 
   497  0295                     	;# 
   498  0296                     	;# 
   499  0297                     	;# 
   500  0298                     	;# 
   501  029F                     	;# 
   502  030C                     	;# 
   503  030E                     	;# 
   504  0311                     	;# 
   505  0311                     	;# 
   506  0312                     	;# 
   507  0313                     	;# 
   508  0314                     	;# 
   509  0315                     	;# 
   510  0315                     	;# 
   511  0316                     	;# 
   512  0317                     	;# 
   513  0318                     	;# 
   514  038C                     	;# 
   515  038E                     	;# 
   516  0391                     	;# 
   517  0392                     	;# 
   518  0393                     	;# 
   519  0397                     	;# 
   520  0398                     	;# 
   521  0399                     	;# 
   522  039A                     	;# 
   523  039C                     	;# 
   524  039D                     	;# 
   525  039E                     	;# 
   526  039F                     	;# 
   527  0411                     	;# 
   528  0411                     	;# 
   529  0412                     	;# 
   530  0413                     	;# 
   531  0414                     	;# 
   532  0415                     	;# 
   533  0416                     	;# 
   534  0417                     	;# 
   535  0418                     	;# 
   536  0418                     	;# 
   537  0419                     	;# 
   538  041A                     	;# 
   539  041B                     	;# 
   540  041C                     	;# 
   541  041D                     	;# 
   542  041E                     	;# 
   543  041F                     	;# 
   544  0498                     	;# 
   545  0498                     	;# 
   546  0499                     	;# 
   547  049A                     	;# 
   548  049B                     	;# 
   549  049B                     	;# 
   550  049C                     	;# 
   551  049D                     	;# 
   552  049E                     	;# 
   553  049F                     	;# 
   554  0617                     	;# 
   555  0618                     	;# 
   556  0619                     	;# 
   557  0619                     	;# 
   558  061A                     	;# 
   559  061B                     	;# 
   560  061C                     	;# 
   561  061C                     	;# 
   562  061F                     	;# 
   563  0691                     	;# 
   564  0692                     	;# 
   565  0693                     	;# 
   566  0694                     	;# 
   567  0695                     	;# 
   568  0696                     	;# 
   569  0697                     	;# 
   570  0698                     	;# 
   571  0699                     	;# 
   572  0711                     	;# 
   573  0712                     	;# 
   574  0713                     	;# 
   575  0714                     	;# 
   576  0715                     	;# 
   577  0716                     	;# 
   578  0717                     	;# 
   579  0718                     	;# 
   580  0719                     	;# 
   581  0891                     	;# 
   582  0891                     	;# 
   583  0891                     	;# 
   584  0891                     	;# 
   585  0891                     	;# 
   586  0891                     	;# 
   587  0892                     	;# 
   588  0892                     	;# 
   589  0892                     	;# 
   590  0893                     	;# 
   591  0893                     	;# 
   592  0893                     	;# 
   593  0893                     	;# 
   594  0893                     	;# 
   595  0893                     	;# 
   596  0894                     	;# 
   597  0894                     	;# 
   598  0894                     	;# 
   599  0895                     	;# 
   600  0895                     	;# 
   601  0895                     	;# 
   602  0896                     	;# 
   603  0896                     	;# 
   604  0896                     	;# 
   605  089B                     	;# 
   606  0911                     	;# 
   607  0912                     	;# 
   608  0913                     	;# 
   609  0914                     	;# 
   610  0915                     	;# 
   611  0916                     	;# 
   612  0918                     	;# 
   613  0919                     	;# 
   614  091A                     	;# 
   615  091B                     	;# 
   616  091C                     	;# 
   617  091D                     	;# 
   618  091E                     	;# 
   619  091F                     	;# 
   620  0E0F                     	;# 
   621  0E10                     	;# 
   622  0E11                     	;# 
   623  0E12                     	;# 
   624  0E13                     	;# 
   625  0E14                     	;# 
   626  0E15                     	;# 
   627  0E16                     	;# 
   628  0E17                     	;# 
   629  0E18                     	;# 
   630  0E19                     	;# 
   631  0E1A                     	;# 
   632  0E1B                     	;# 
   633  0E1C                     	;# 
   634  0E20                     	;# 
   635  0E21                     	;# 
   636  0E22                     	;# 
   637  0E24                     	;# 
   638  0E25                     	;# 
   639  0E28                     	;# 
   640  0E29                     	;# 
   641  0E2A                     	;# 
   642  0E2B                     	;# 
   643  0E2C                     	;# 
   644  0E2D                     	;# 
   645  0E2E                     	;# 
   646  0E2F                     	;# 
   647  0E90                     	;# 
   648  0E91                     	;# 
   649  0E92                     	;# 
   650  0E94                     	;# 
   651  0E95                     	;# 
   652  0EA0                     	;# 
   653  0EA1                     	;# 
   654  0EA2                     	;# 
   655  0EA3                     	;# 
   656  0EA4                     	;# 
   657  0EA5                     	;# 
   658  0F0F                     	;# 
   659  0F10                     	;# 
   660  0F11                     	;# 
   661  0F12                     	;# 
   662  0F13                     	;# 
   663  0F14                     	;# 
   664  0F15                     	;# 
   665  0F16                     	;# 
   666  0F17                     	;# 
   667  0F18                     	;# 
   668  0F19                     	;# 
   669  0F1A                     	;# 
   670  0F1B                     	;# 
   671  0F1C                     	;# 
   672  0F1D                     	;# 
   673  0F1E                     	;# 
   674  0F1F                     	;# 
   675  0F20                     	;# 
   676  0F21                     	;# 
   677  0F22                     	;# 
   678  0F23                     	;# 
   679  0F24                     	;# 
   680  0F25                     	;# 
   681  0F26                     	;# 
   682  0F27                     	;# 
   683  0F28                     	;# 
   684  0F29                     	;# 
   685  0F2A                     	;# 
   686  0F2B                     	;# 
   687  0F2C                     	;# 
   688  0F2D                     	;# 
   689  0F2E                     	;# 
   690  0F2F                     	;# 
   691  0F30                     	;# 
   692  0F31                     	;# 
   693  0F32                     	;# 
   694  0F33                     	;# 
   695  0F34                     	;# 
   696  0F35                     	;# 
   697  0F36                     	;# 
   698  0F37                     	;# 
   699  0FE4                     	;# 
   700  0FE5                     	;# 
   701  0FE6                     	;# 
   702  0FE7                     	;# 
   703  0FE8                     	;# 
   704  0FE9                     	;# 
   705  0FEA                     	;# 
   706  0FEB                     	;# 
   707  0FED                     	;# 
   708  0FEE                     	;# 
   709  0FEF                     	;# 
   710                           
   711                           	psect	nvCOMMON
   712  007A                     __pnvCOMMON:	
   713  007A                     _transmitFlag:	
   714  007A                     	ds	1
   715                           
   716                           	psect	nvBANK0
   717  0025                     __pnvBANK0:	
   718  0025                     _packet:	
   719  0025                     	ds	1
   720  0016                     _TMR0H	set	22
   721  0018                     _T0CON1	set	24
   722  0015                     _TMR0	set	21
   723  0085                     _TMR0IF	set	133
   724  00BF                     _T0EN	set	191
   725  005E                     _PEIE	set	94
   726  005F                     _GIE	set	95
   727  008E                     _TRISC	set	142
   728  008C                     _TRISA	set	140
   729  0485                     _TMR0IE	set	1157
   730  0875                     _LATC5	set	2165
   731  0865                     _LATA5	set	2149
   732  0874                     _LATC4	set	2164
   733  0871                     _LATC1	set	2161
   734  0862                     _LATA2	set	2146
   735  0861                     _LATA1	set	2145
   736  0870                     _LATC0	set	2160
   737  0872                     _LATC2	set	2162
   738  018E                     _ANSELC	set	398
   739  018C                     _ANSELA	set	396
   740  091F                     _OSCFRQ	set	2335
   741  0919                     _OSCCON1	set	2329
   742                           
   743                           	psect	stringtext1
   744  05CB                     __pstringtext1:	
   745  05CB                     STR_4:	
   746  05CB  3420               	retlw	32	;' '
   747  05CC  3420               	retlw	32	;' '
   748  05CD  3420               	retlw	32	;' '
   749  05CE  3420               	retlw	32	;' '
   750  05CF  3420               	retlw	32	;' '
   751  05D0  344C               	retlw	76	;'L'
   752  05D1  344F               	retlw	79	;'O'
   753  05D2  3441               	retlw	65	;'A'
   754  05D3  3444               	retlw	68	;'D'
   755  05D4  3449               	retlw	73	;'I'
   756  05D5  344E               	retlw	78	;'N'
   757  05D6  3447               	retlw	71	;'G'
   758  05D7  3420               	retlw	32	;' '
   759  05D8  3420               	retlw	32	;' '
   760  05D9  3420               	retlw	32	;' '
   761  05DA  3400               	retlw	0
   762                           
   763                           	psect	stringtext2
   764  05DB                     __pstringtext2:	
   765  05DB                     STR_3:	
   766  05DB  3420               	retlw	32	;' '
   767  05DC  3420               	retlw	32	;' '
   768  05DD  3420               	retlw	32	;' '
   769  05DE  3420               	retlw	32	;' '
   770  05DF  3420               	retlw	32	;' '
   771  05E0  344C               	retlw	76	;'L'
   772  05E1  344F               	retlw	79	;'O'
   773  05E2  3441               	retlw	65	;'A'
   774  05E3  3444               	retlw	68	;'D'
   775  05E4  3449               	retlw	73	;'I'
   776  05E5  344E               	retlw	78	;'N'
   777  05E6  3447               	retlw	71	;'G'
   778  05E7  342E               	retlw	46	;'.'
   779  05E8  3420               	retlw	32	;' '
   780  05E9  3420               	retlw	32	;' '
   781  05EA  3400               	retlw	0
   782                           
   783                           	psect	stringtext3
   784  05EB                     __pstringtext3:	
   785  05EB                     STR_2:	
   786  05EB  3420               	retlw	32	;' '
   787  05EC  3420               	retlw	32	;' '
   788  05ED  3420               	retlw	32	;' '
   789  05EE  3420               	retlw	32	;' '
   790  05EF  3420               	retlw	32	;' '
   791  05F0  344C               	retlw	76	;'L'
   792  05F1  344F               	retlw	79	;'O'
   793  05F2  3441               	retlw	65	;'A'
   794  05F3  3444               	retlw	68	;'D'
   795  05F4  3449               	retlw	73	;'I'
   796  05F5  344E               	retlw	78	;'N'
   797  05F6  3447               	retlw	71	;'G'
   798  05F7  342E               	retlw	46	;'.'
   799  05F8  342E               	retlw	46	;'.'
   800  05F9  3420               	retlw	32	;' '
   801  05FA  3400               	retlw	0
   802                           
   803                           	psect	stringtext4
   804  05FB                     __pstringtext4:	
   805  05FB                     STR_1:	
   806  05FB  3420               	retlw	32	;' '
   807  05FC  3420               	retlw	32	;' '
   808  05FD  3420               	retlw	32	;' '
   809  05FE  3420               	retlw	32	;' '
   810  05FF  3420               	retlw	32	;' '
   811  0600  344C               	retlw	76	;'L'
   812  0601  344F               	retlw	79	;'O'
   813  0602  3441               	retlw	65	;'A'
   814  0603  3444               	retlw	68	;'D'
   815  0604  3449               	retlw	73	;'I'
   816  0605  344E               	retlw	78	;'N'
   817  0606  3447               	retlw	71	;'G'
   818  0607  342E               	retlw	46	;'.'
   819  0608  342E               	retlw	46	;'.'
   820  0609  342E               	retlw	46	;'.'
   821  060A  3400               	retlw	0
   822                           
   823                           	psect	stringtext5
   824  0000                     __pstringtext5:	
   825  05DB                     
   826                           ; #config settings
   827  0000                     
   828                           	psect	cinit
   829  0039                     start_initialization:	
   830  0039                     __initialization:	
   831                           
   832                           ; Clear objects allocated to COMMON
   833  0039  01FB               	clrf	__pbssCOMMON& (0+127)
   834  003A                     end_of_initialization:	
   835                           ;End of C runtime variable initialization code
   836                           
   837  003A                     __end_of__initialization:	
   838  003A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   839  003B  0020               	movlb	0
   840  003C  3184  2C9B         	ljmp	_main	;jump to C main() function
   841                           
   842                           	psect	bssCOMMON
   843  007B                     __pbssCOMMON:	
   844  007B                     _packetIndex:	
   845  007B                     	ds	1
   846                           
   847                           	psect	cstackCOMMON
   848  0070                     __pcstackCOMMON:	
   849  0070                     ?_command:	
   850  0070                     ?_data:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0070                     ?_LCD_init:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0070                     ?_LCD_clear:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0070                     ?_LCD_write:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     ?_main:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     ?_displayClock:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ??_displayClock:	
   869                           ; 1 bytes @ 0x0
   870                           
   871                           
   872                           ; 1 bytes @ 0x0
   873  0070                     	ds	1
   874  0071                     _displayClock$87:	
   875                           
   876                           ; 1 bytes @ 0x1
   877  0071                     	ds	1
   878  0072                     ??_command:	
   879  0072                     ??_data:	
   880                           ; 1 bytes @ 0x2
   881                           
   882                           
   883                           ; 1 bytes @ 0x2
   884  0072                     	ds	1
   885  0073                     command@command:	
   886  0073                     data@data:	
   887                           ; 1 bytes @ 0x3
   888                           
   889                           
   890                           ; 1 bytes @ 0x3
   891  0073                     	ds	1
   892  0074                     ??_LCD_init:	
   893  0074                     ??_LCD_clear:	
   894                           ; 1 bytes @ 0x4
   895                           
   896  0074                     ?_LCD_goto:	
   897                           ; 1 bytes @ 0x4
   898                           
   899  0074                     ??_LCD_write:	
   900                           ; 1 bytes @ 0x4
   901                           
   902  0074                     LCD_goto@offset:	
   903                           ; 1 bytes @ 0x4
   904                           
   905                           
   906                           ; 1 bytes @ 0x4
   907  0074                     	ds	1
   908  0075                     ??_LCD_goto:	
   909  0075                     LCD_clear@n:	
   910                           ; 1 bytes @ 0x5
   911                           
   912  0075                     LCD_goto@page:	
   913                           ; 1 bytes @ 0x5
   914                           
   915                           
   916                           ; 1 bytes @ 0x5
   917  0075                     	ds	1
   918  0076                     LCD_clear@j:	
   919  0076                     LCD_write@character:	
   920                           ; 1 bytes @ 0x6
   921                           
   922                           
   923                           ; 1 bytes @ 0x6
   924  0076                     	ds	1
   925  0077                     ??_LCD_write_S:	
   926                           
   927                           ; 1 bytes @ 0x7
   928  0077                     	ds	1
   929  0078                     LCD_write_S@i:	
   930                           
   931                           ; 2 bytes @ 0x8
   932  0078                     	ds	2
   933                           
   934                           	psect	cstackBANK0
   935  0020                     __pcstackBANK0:	
   936  0020                     ?_LCD_write_S:	
   937  0020                     LCD_write_S@string:	
   938                           ; 1 bytes @ 0x0
   939                           
   940                           
   941                           ; 2 bytes @ 0x0
   942  0020                     	ds	2
   943  0022                     LCD_write_S@length:	
   944                           
   945                           ; 2 bytes @ 0x2
   946  0022                     	ds	2
   947  0024                     ??_main:	
   948                           
   949                           ; 1 bytes @ 0x4
   950  0024                     	ds	1
   951                           
   952                           	psect	maintext
   953  049B                     __pmaintext:	
   954 ;;
   955 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   956 ;;
   957 ;; *************** function _main *****************
   958 ;; Defined at:
   959 ;;		line 40 in file "BLE_LCD.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;		None
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : B1F/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   973 ;;      Params:         0       0       0       0       0       0       0       0
   974 ;;      Locals:         0       0       0       0       0       0       0       0
   975 ;;      Temps:          0       1       0       0       0       0       0       0
   976 ;;      Totals:         0       1       0       0       0       0       0       0
   977 ;;Total ram usage:        1 bytes
   978 ;; Hardware stack levels required when called:    4
   979 ;; This function calls:
   980 ;;		_LCD_clear
   981 ;;		_LCD_goto
   982 ;;		_LCD_init
   983 ;;		_LCD_write_S
   984 ;; This function is called by:
   985 ;;		Startup code after reset
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           
   990                           ;psect for function _main
   991  049B                     _main:	
   992                           
   993                           ;BLE_LCD.c: 41:     OSCCON1 = 0x60;
   994                           
   995                           ;incstack = 0
   996                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   997  049B  3060               	movlw	96
   998  049C  0032               	movlb	18	; select bank18
   999  049D  0099               	movwf	25	;volatile
  1000                           
  1001                           ;BLE_LCD.c: 42:     OSCFRQ = 0x03;
  1002  049E  3003               	movlw	3
  1003  049F  009F               	movwf	31	;volatile
  1004                           
  1005                           ;BLE_LCD.c: 44:     TRISA = 0b11011001;
  1006  04A0  30D9               	movlw	217
  1007  04A1  0021               	movlb	1	; select bank1
  1008  04A2  008C               	movwf	12	;volatile
  1009                           
  1010                           ;BLE_LCD.c: 46:     TRISC = 0b11001000;
  1011  04A3  30C8               	movlw	200
  1012  04A4  008E               	movwf	14	;volatile
  1013                           
  1014                           ;BLE_LCD.c: 48:     ANSELA = 0b00000000;
  1015  04A5  0023               	movlb	3	; select bank3
  1016  04A6  018C               	clrf	12	;volatile
  1017                           
  1018                           ;BLE_LCD.c: 49:     ANSELC = 0b00000000;
  1019  04A7  018E               	clrf	14	;volatile
  1020                           
  1021                           ;BLE_LCD.c: 51:     GIE = 1;
  1022  04A8  178B               	bsf	11,7	;volatile
  1023                           
  1024                           ;BLE_LCD.c: 52:     PEIE = 1;
  1025  04A9  170B               	bsf	11,6	;volatile
  1026                           
  1027                           ;BLE_LCD.c: 53:     TMR0IE = 1;
  1028  04AA  0021               	movlb	1	; select bank1
  1029  04AB  1690               	bsf	16,5	;volatile
  1030                           
  1031                           ;BLE_LCD.c: 55:     T0EN = 1;
  1032  04AC  0020               	movlb	0	; select bank0
  1033  04AD  1797               	bsf	23,7	;volatile
  1034                           
  1035                           ;BLE_LCD.c: 56:     TMR0 = 0;
  1036  04AE  0195               	clrf	21	;volatile
  1037                           
  1038                           ;BLE_LCD.c: 57:     T0CON1 ^= 0b01000000;
  1039  04AF  3040               	movlw	64
  1040  04B0  00A4               	movwf	??_main
  1041  04B1  0824               	movf	??_main,w
  1042  04B2  0698               	xorwf	24,f	;volatile
  1043                           
  1044                           ;BLE_LCD.c: 58:     TMR0H = 0b10111111;
  1045  04B3  30BF               	movlw	191
  1046  04B4  0096               	movwf	22	;volatile
  1047                           
  1048                           ;BLE_LCD.c: 60:     LATA1 = 1;
  1049  04B5  0022               	movlb	2	; select bank2
  1050  04B6  148C               	bsf	12,1	;volatile
  1051                           
  1052                           ;BLE_LCD.c: 61:     LATA2 = 1;
  1053  04B7  150C               	bsf	12,2	;volatile
  1054                           
  1055                           ;BLE_LCD.c: 62:     LATC0 = 0;
  1056  04B8  100E               	bcf	14,0	;volatile
  1057                           
  1058                           ;BLE_LCD.c: 63:     LATC1 = 1;
  1059  04B9  148E               	bsf	14,1	;volatile
  1060                           
  1061                           ;BLE_LCD.c: 64:     LATC2 = 1;
  1062  04BA  150E               	bsf	14,2	;volatile
  1063                           
  1064                           ;BLE_LCD.c: 66:     LATC4 = 1;
  1065  04BB  160E               	bsf	14,4	;volatile
  1066                           
  1067                           ;BLE_LCD.c: 67:     LATA5 = 1;
  1068  04BC  168C               	bsf	12,5	;volatile
  1069                           
  1070                           ;BLE_LCD.c: 69:     LCD_init();
  1071  04BD  3185  2555  3184   	fcall	_LCD_init
  1072                           
  1073                           ;BLE_LCD.c: 70:     LCD_clear();
  1074  04C0  3185  252F  3184   	fcall	_LCD_clear
  1075                           
  1076                           ;BLE_LCD.c: 72:     LCD_goto(3, 0);
  1077  04C3  01F4               	clrf	LCD_goto@offset
  1078  04C4  3003               	movlw	3
  1079  04C5  3185  2598  3184   	fcall	_LCD_goto
  1080  04C8                     l1463:	
  1081                           
  1082                           ;BLE_LCD.c: 92:     {;BLE_LCD.c: 93:         LCD_goto(2, 0);
  1083  04C8  01F4               	clrf	LCD_goto@offset
  1084  04C9  3002               	movlw	2
  1085  04CA  3185  2598  3184   	fcall	_LCD_goto
  1086                           
  1087                           ;BLE_LCD.c: 94:         LCD_write_S("     LOADING...", 15);
  1088  04CD  30FB               	movlw	low (STR_1| (0+32768))
  1089  04CE  0020               	movlb	0	; select bank0
  1090  04CF  00A0               	movwf	LCD_write_S@string
  1091  04D0  3085               	movlw	high (STR_1| (0+32768))
  1092  04D1  00A1               	movwf	LCD_write_S@string+1
  1093  04D2  300F               	movlw	15
  1094  04D3  00A2               	movwf	LCD_write_S@length
  1095  04D4  3000               	movlw	0
  1096  04D5  00A3               	movwf	LCD_write_S@length+1
  1097  04D6  3185  2579  3184   	fcall	_LCD_write_S
  1098                           
  1099                           ;BLE_LCD.c: 95:         LCD_goto(2, 0);
  1100  04D9  01F4               	clrf	LCD_goto@offset
  1101  04DA  3002               	movlw	2
  1102  04DB  3185  2598  3184   	fcall	_LCD_goto
  1103                           
  1104                           ;BLE_LCD.c: 96:         LCD_write_S("     LOADING.. ", 15);
  1105  04DE  30EB               	movlw	low (STR_2| (0+32768))
  1106  04DF  0020               	movlb	0	; select bank0
  1107  04E0  00A0               	movwf	LCD_write_S@string
  1108  04E1  3085               	movlw	high (STR_2| (0+32768))
  1109  04E2  00A1               	movwf	LCD_write_S@string+1
  1110  04E3  300F               	movlw	15
  1111  04E4  00A2               	movwf	LCD_write_S@length
  1112  04E5  3000               	movlw	0
  1113  04E6  00A3               	movwf	LCD_write_S@length+1
  1114  04E7  3185  2579  3184   	fcall	_LCD_write_S
  1115                           
  1116                           ;BLE_LCD.c: 97:         LCD_goto(2, 0);
  1117  04EA  01F4               	clrf	LCD_goto@offset
  1118  04EB  3002               	movlw	2
  1119  04EC  3185  2598  3184   	fcall	_LCD_goto
  1120                           
  1121                           ;BLE_LCD.c: 98:         LCD_write_S("     LOADING.  ", 15);
  1122  04EF  30DB               	movlw	low (STR_3| (0+32768))
  1123  04F0  0020               	movlb	0	; select bank0
  1124  04F1  00A0               	movwf	LCD_write_S@string
  1125  04F2  3085               	movlw	high (STR_3| (0+32768))
  1126  04F3  00A1               	movwf	LCD_write_S@string+1
  1127  04F4  300F               	movlw	15
  1128  04F5  00A2               	movwf	LCD_write_S@length
  1129  04F6  3000               	movlw	0
  1130  04F7  00A3               	movwf	LCD_write_S@length+1
  1131  04F8  3185  2579  3184   	fcall	_LCD_write_S
  1132                           
  1133                           ;BLE_LCD.c: 99:         LCD_goto(2, 0);
  1134  04FB  01F4               	clrf	LCD_goto@offset
  1135  04FC  3002               	movlw	2
  1136  04FD  3185  2598  3184   	fcall	_LCD_goto
  1137                           
  1138                           ;BLE_LCD.c: 100:         LCD_write_S("     LOADING   ", 15);
  1139  0500  30CB               	movlw	low (STR_4| (0+32768))
  1140  0501  0020               	movlb	0	; select bank0
  1141  0502  00A0               	movwf	LCD_write_S@string
  1142  0503  3085               	movlw	high (STR_4| (0+32768))
  1143  0504  00A1               	movwf	LCD_write_S@string+1
  1144  0505  300F               	movlw	15
  1145  0506  00A2               	movwf	LCD_write_S@length
  1146  0507  3000               	movlw	0
  1147  0508  00A3               	movwf	LCD_write_S@length+1
  1148  0509  3185  2579  3184   	fcall	_LCD_write_S
  1149                           
  1150                           ;BLE_LCD.c: 101:         LCD_goto(2, 0);
  1151  050C  01F4               	clrf	LCD_goto@offset
  1152  050D  3002               	movlw	2
  1153  050E  3185  2598  3184   	fcall	_LCD_goto
  1154                           
  1155                           ;BLE_LCD.c: 102:         LCD_write_S("     LOADING.  ", 15);
  1156  0511  30DB               	movlw	low (STR_3| (0+32768))
  1157  0512  0020               	movlb	0	; select bank0
  1158  0513  00A0               	movwf	LCD_write_S@string
  1159  0514  3085               	movlw	high (STR_3| (0+32768))
  1160  0515  00A1               	movwf	LCD_write_S@string+1
  1161  0516  300F               	movlw	15
  1162  0517  00A2               	movwf	LCD_write_S@length
  1163  0518  3000               	movlw	0
  1164  0519  00A3               	movwf	LCD_write_S@length+1
  1165  051A  3185  2579  3184   	fcall	_LCD_write_S
  1166                           
  1167                           ;BLE_LCD.c: 103:         LCD_goto(2, 0);
  1168  051D  01F4               	clrf	LCD_goto@offset
  1169  051E  3002               	movlw	2
  1170  051F  3185  2598  3184   	fcall	_LCD_goto
  1171                           
  1172                           ;BLE_LCD.c: 104:         LCD_write_S("     LOADING.. ", 15);
  1173  0522  30EB               	movlw	low (STR_2| (0+32768))
  1174  0523  0020               	movlb	0	; select bank0
  1175  0524  00A0               	movwf	LCD_write_S@string
  1176  0525  3085               	movlw	high (STR_2| (0+32768))
  1177  0526  00A1               	movwf	LCD_write_S@string+1
  1178  0527  300F               	movlw	15
  1179  0528  00A2               	movwf	LCD_write_S@length
  1180  0529  3000               	movlw	0
  1181  052A  00A3               	movwf	LCD_write_S@length+1
  1182  052B  3185  2579  3184   	fcall	_LCD_write_S
  1183  052E  2CC8               	goto	l1463
  1184  052F                     __end_of_main:	
  1185                           
  1186                           	psect	text1
  1187  0579                     __ptext1:	
  1188 ;; *************** function _LCD_write_S *****************
  1189 ;; Defined at:
  1190 ;;		line 523 in file "./LCD.h"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;  string          2    0[BANK0 ] PTR unsigned char 
  1193 ;;		 -> STR_6(16), STR_5(16), STR_4(16), STR_3(16), 
  1194 ;;		 -> STR_2(16), STR_1(16), 
  1195 ;;  length          2    2[BANK0 ] int 
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;  i               2    8[COMMON] int 
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1207 ;;      Params:         0       4       0       0       0       0       0       0
  1208 ;;      Locals:         2       0       0       0       0       0       0       0
  1209 ;;      Temps:          1       0       0       0       0       0       0       0
  1210 ;;      Totals:         3       4       0       0       0       0       0       0
  1211 ;;Total ram usage:        7 bytes
  1212 ;; Hardware stack levels used:    1
  1213 ;; Hardware stack levels required when called:    3
  1214 ;; This function calls:
  1215 ;;		_LCD_write
  1216 ;; This function is called by:
  1217 ;;		_main
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           
  1222                           ;psect for function _LCD_write_S
  1223  0579                     _LCD_write_S:	
  1224                           
  1225                           ;./LCD.h: 523: void LCD_write_S(char string[], int length);./LCD.h: 524: {;./LCD.h: 525:
      +                               for (int i = 0; i < length; i++)
  1226                           
  1227                           ;incstack = 0
  1228                           ; Regs used in _LCD_write_S: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1229  0579  01F8               	clrf	LCD_write_S@i
  1230  057A  01F9               	clrf	LCD_write_S@i+1
  1231  057B                     l1421:	
  1232  057B  0879               	movf	LCD_write_S@i+1,w
  1233  057C  3A80               	xorlw	128
  1234  057D  00F7               	movwf	??_LCD_write_S
  1235  057E  0020               	movlb	0	; select bank0
  1236  057F  0823               	movf	LCD_write_S@length+1,w
  1237  0580  3A80               	xorlw	128
  1238  0581  0277               	subwf	??_LCD_write_S,w
  1239  0582  1D03               	skipz
  1240  0583  2D86               	goto	u265
  1241  0584  0822               	movf	LCD_write_S@length,w
  1242  0585  0278               	subwf	LCD_write_S@i,w
  1243  0586                     u265:	
  1244  0586  1803               	btfsc	3,0
  1245  0587  0008               	return
  1246                           
  1247                           ;./LCD.h: 526:     {;./LCD.h: 527:         LCD_write(string[i]);
  1248  0588  0020               	movlb	0	; select bank0
  1249  0589  0820               	movf	LCD_write_S@string,w
  1250  058A  0778               	addwf	LCD_write_S@i,w
  1251  058B  0084               	movwf	4
  1252  058C  0821               	movf	LCD_write_S@string+1,w
  1253  058D  3D79               	addwfc	LCD_write_S@i+1,w
  1254  058E  0085               	movwf	5
  1255  058F  0800               	movf	0,w	;code access
  1256  0590  3180  203E  3185   	fcall	_LCD_write
  1257                           
  1258                           ;./LCD.h: 528:     }
  1259  0593  3001               	movlw	1
  1260  0594  07F8               	addwf	LCD_write_S@i,f
  1261  0595  3000               	movlw	0
  1262  0596  3DF9               	addwfc	LCD_write_S@i+1,f
  1263  0597  2D7B               	goto	l1421
  1264  0598                     __end_of_LCD_write_S:	
  1265                           
  1266                           	psect	text2
  1267  003E                     __ptext2:	
  1268 ;; *************** function _LCD_write *****************
  1269 ;; Defined at:
  1270 ;;		line 105 in file "./LCD.h"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;  character       1    wreg     unsigned char 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  character       1    6[COMMON] unsigned char 
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1284 ;;      Params:         0       0       0       0       0       0       0       0
  1285 ;;      Locals:         1       0       0       0       0       0       0       0
  1286 ;;      Temps:          2       0       0       0       0       0       0       0
  1287 ;;      Totals:         3       0       0       0       0       0       0       0
  1288 ;;Total ram usage:        3 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; Hardware stack levels required when called:    2
  1291 ;; This function calls:
  1292 ;;		_data
  1293 ;; This function is called by:
  1294 ;;		_LCD_write_S
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           
  1299                           ;psect for function _LCD_write
  1300  003E                     _LCD_write:	
  1301                           
  1302                           ;incstack = 0
  1303                           ; Regs used in _LCD_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1304                           ;LCD_write@character stored from wreg
  1305  003E  00F6               	movwf	LCD_write@character
  1306                           
  1307                           ;./LCD.h: 105: void LCD_write(char character);./LCD.h: 106: {;./LCD.h: 107:     switch (
      +                          character) {
  1308  003F  2C18               	goto	l1383
  1309  0040                     l1299:	
  1310                           
  1311                           ;./LCD.h: 109:         {;./LCD.h: 110:             data(0x3F);
  1312  0040  303F               	movlw	63
  1313  0041  3185  25A9  3180   	fcall	_data
  1314                           
  1315                           ;./LCD.h: 111:             data(0x48);
  1316  0044  3048               	movlw	72
  1317  0045  3185  25A9  3180   	fcall	_data
  1318                           
  1319                           ;./LCD.h: 112:             data(0x48);
  1320  0048  3048               	movlw	72
  1321  0049  3185  25A9  3180   	fcall	_data
  1322                           
  1323                           ;./LCD.h: 113:             data(0x48);
  1324  004C  3048               	movlw	72
  1325  004D  3185  25A9  3180   	fcall	_data
  1326                           
  1327                           ;./LCD.h: 114:             data(0x3F);
  1328  0050  303F               	movlw	63
  1329  0051  3185  25A9  3180   	fcall	_data
  1330                           
  1331                           ;./LCD.h: 115:             data(0x00);
  1332  0054  3000               	movlw	0
  1333  0055  3185  25A9         	fcall	_data
  1334                           
  1335                           ;./LCD.h: 116:             break;
  1336  0057  0008               	return
  1337  0058                     l1301:	
  1338                           
  1339                           ;./LCD.h: 119:         {;./LCD.h: 120:             data(0x7F);
  1340  0058  307F               	movlw	127
  1341  0059  3185  25A9  3180   	fcall	_data
  1342                           
  1343                           ;./LCD.h: 121:             data(0x49);
  1344  005C  3049               	movlw	73
  1345  005D  3185  25A9  3180   	fcall	_data
  1346                           
  1347                           ;./LCD.h: 122:             data(0x49);
  1348  0060  3049               	movlw	73
  1349  0061  3185  25A9  3180   	fcall	_data
  1350                           
  1351                           ;./LCD.h: 123:             data(0x49);
  1352  0064  3049               	movlw	73
  1353  0065  3185  25A9  3180   	fcall	_data
  1354                           
  1355                           ;./LCD.h: 124:             data(0x36);
  1356  0068  3036               	movlw	54
  1357  0069  3185  25A9  3180   	fcall	_data
  1358                           
  1359                           ;./LCD.h: 125:             data(0x00);
  1360  006C  3000               	movlw	0
  1361  006D  3185  25A9         	fcall	_data
  1362                           
  1363                           ;./LCD.h: 126:             break;
  1364  006F  0008               	return
  1365  0070                     l1303:	
  1366                           
  1367                           ;./LCD.h: 129:         {;./LCD.h: 130:             data(0x3E);
  1368  0070  303E               	movlw	62
  1369  0071  3185  25A9  3180   	fcall	_data
  1370                           
  1371                           ;./LCD.h: 131:             data(0x41);
  1372  0074  3041               	movlw	65
  1373  0075  3185  25A9  3180   	fcall	_data
  1374                           
  1375                           ;./LCD.h: 132:             data(0x41);
  1376  0078  3041               	movlw	65
  1377  0079  3185  25A9  3180   	fcall	_data
  1378                           
  1379                           ;./LCD.h: 133:             data(0x41);
  1380  007C  3041               	movlw	65
  1381  007D  3185  25A9  3180   	fcall	_data
  1382                           
  1383                           ;./LCD.h: 134:             data(0x22);
  1384  0080  3022               	movlw	34
  1385  0081  3185  25A9  3180   	fcall	_data
  1386                           
  1387                           ;./LCD.h: 135:             data(0x00);
  1388  0084  3000               	movlw	0
  1389  0085  3185  25A9         	fcall	_data
  1390                           
  1391                           ;./LCD.h: 136:             break;
  1392  0087  0008               	return
  1393  0088                     l1305:	
  1394                           
  1395                           ;./LCD.h: 139:         {;./LCD.h: 140:             data(0x7F);
  1396  0088  307F               	movlw	127
  1397  0089  3185  25A9  3180   	fcall	_data
  1398                           
  1399                           ;./LCD.h: 141:             data(0x41);
  1400  008C  3041               	movlw	65
  1401  008D  3185  25A9  3180   	fcall	_data
  1402                           
  1403                           ;./LCD.h: 142:             data(0x41);
  1404  0090  3041               	movlw	65
  1405  0091  3185  25A9  3180   	fcall	_data
  1406                           
  1407                           ;./LCD.h: 143:             data(0x41);
  1408  0094  3041               	movlw	65
  1409  0095  3185  25A9  3180   	fcall	_data
  1410                           
  1411                           ;./LCD.h: 144:             data(0x3E);
  1412  0098  303E               	movlw	62
  1413  0099  3185  25A9  3180   	fcall	_data
  1414                           
  1415                           ;./LCD.h: 145:             data(0x00);
  1416  009C  3000               	movlw	0
  1417  009D  3185  25A9         	fcall	_data
  1418                           
  1419                           ;./LCD.h: 146:             break;
  1420  009F  0008               	return
  1421  00A0                     l1307:	
  1422                           
  1423                           ;./LCD.h: 149:         {;./LCD.h: 150:             data(0x7F);
  1424  00A0  307F               	movlw	127
  1425  00A1  3185  25A9  3180   	fcall	_data
  1426                           
  1427                           ;./LCD.h: 151:             data(0x49);
  1428  00A4  3049               	movlw	73
  1429  00A5  3185  25A9  3180   	fcall	_data
  1430                           
  1431                           ;./LCD.h: 152:             data(0x49);
  1432  00A8  3049               	movlw	73
  1433  00A9  3185  25A9  3180   	fcall	_data
  1434                           
  1435                           ;./LCD.h: 153:             data(0x41);
  1436  00AC  3041               	movlw	65
  1437  00AD  3185  25A9  3180   	fcall	_data
  1438                           
  1439                           ;./LCD.h: 154:             data(0x41);
  1440  00B0  3041               	movlw	65
  1441  00B1  3185  25A9  3180   	fcall	_data
  1442                           
  1443                           ;./LCD.h: 155:             data(0x00);
  1444  00B4  3000               	movlw	0
  1445  00B5  3185  25A9         	fcall	_data
  1446                           
  1447                           ;./LCD.h: 156:             break;
  1448  00B7  0008               	return
  1449  00B8                     l1309:	
  1450                           
  1451                           ;./LCD.h: 159:         {;./LCD.h: 160:             data(0x7F);
  1452  00B8  307F               	movlw	127
  1453  00B9  3185  25A9  3180   	fcall	_data
  1454                           
  1455                           ;./LCD.h: 161:             data(0x50);
  1456  00BC  3050               	movlw	80
  1457  00BD  3185  25A9  3180   	fcall	_data
  1458                           
  1459                           ;./LCD.h: 162:             data(0x50);
  1460  00C0  3050               	movlw	80
  1461  00C1  3185  25A9  3180   	fcall	_data
  1462                           
  1463                           ;./LCD.h: 163:             data(0x40);
  1464  00C4  3040               	movlw	64
  1465  00C5  3185  25A9  3180   	fcall	_data
  1466                           
  1467                           ;./LCD.h: 164:             data(0x40);
  1468  00C8  3040               	movlw	64
  1469  00C9  3185  25A9  3180   	fcall	_data
  1470                           
  1471                           ;./LCD.h: 165:             data(0x00);
  1472  00CC  3000               	movlw	0
  1473  00CD  3185  25A9         	fcall	_data
  1474                           
  1475                           ;./LCD.h: 166:             break;
  1476  00CF  0008               	return
  1477  00D0                     l1311:	
  1478                           
  1479                           ;./LCD.h: 169:         {;./LCD.h: 170:             data(0x3E);
  1480  00D0  303E               	movlw	62
  1481  00D1  3185  25A9  3180   	fcall	_data
  1482                           
  1483                           ;./LCD.h: 171:             data(0x41);
  1484  00D4  3041               	movlw	65
  1485  00D5  3185  25A9  3180   	fcall	_data
  1486                           
  1487                           ;./LCD.h: 172:             data(0x49);
  1488  00D8  3049               	movlw	73
  1489  00D9  3185  25A9  3180   	fcall	_data
  1490                           
  1491                           ;./LCD.h: 173:             data(0x49);
  1492  00DC  3049               	movlw	73
  1493  00DD  3185  25A9  3180   	fcall	_data
  1494                           
  1495                           ;./LCD.h: 174:             data(0x2E);
  1496  00E0  302E               	movlw	46
  1497  00E1  3185  25A9  3180   	fcall	_data
  1498                           
  1499                           ;./LCD.h: 175:             data(0x00);
  1500  00E4  3000               	movlw	0
  1501  00E5  3185  25A9         	fcall	_data
  1502                           
  1503                           ;./LCD.h: 176:             break;
  1504  00E7  0008               	return
  1505  00E8                     l1313:	
  1506                           
  1507                           ;./LCD.h: 179:         {;./LCD.h: 180:             data(0x7F);
  1508  00E8  307F               	movlw	127
  1509  00E9  3185  25A9  3180   	fcall	_data
  1510                           
  1511                           ;./LCD.h: 181:             data(0x08);
  1512  00EC  3008               	movlw	8
  1513  00ED  3185  25A9  3180   	fcall	_data
  1514                           
  1515                           ;./LCD.h: 182:             data(0x08);
  1516  00F0  3008               	movlw	8
  1517  00F1  3185  25A9  3180   	fcall	_data
  1518                           
  1519                           ;./LCD.h: 183:             data(0x08);
  1520  00F4  3008               	movlw	8
  1521  00F5  3185  25A9  3180   	fcall	_data
  1522                           
  1523                           ;./LCD.h: 184:             data(0x7F);
  1524  00F8  307F               	movlw	127
  1525  00F9  3185  25A9  3180   	fcall	_data
  1526                           
  1527                           ;./LCD.h: 185:             data(0x00);
  1528  00FC  3000               	movlw	0
  1529  00FD  3185  25A9         	fcall	_data
  1530                           
  1531                           ;./LCD.h: 186:             break;
  1532  00FF  0008               	return
  1533  0100                     l1315:	
  1534                           
  1535                           ;./LCD.h: 189:         {;./LCD.h: 190:             data(0x00);
  1536  0100  3000               	movlw	0
  1537  0101  3185  25A9  3180   	fcall	_data
  1538                           
  1539                           ;./LCD.h: 191:             data(0x41);
  1540  0104  3041               	movlw	65
  1541  0105  3185  25A9  3180   	fcall	_data
  1542                           
  1543                           ;./LCD.h: 192:             data(0x7F);
  1544  0108  307F               	movlw	127
  1545  0109  3185  25A9  3180   	fcall	_data
  1546                           
  1547                           ;./LCD.h: 193:             data(0x41);
  1548  010C  3041               	movlw	65
  1549  010D  3185  25A9  3180   	fcall	_data
  1550                           
  1551                           ;./LCD.h: 194:             data(0x00);
  1552  0110  3000               	movlw	0
  1553  0111  3185  25A9  3180   	fcall	_data
  1554                           
  1555                           ;./LCD.h: 195:             data(0x00);
  1556  0114  3000               	movlw	0
  1557  0115  3185  25A9         	fcall	_data
  1558                           
  1559                           ;./LCD.h: 196:             break;
  1560  0117  0008               	return
  1561  0118                     l1317:	
  1562                           
  1563                           ;./LCD.h: 199:         {;./LCD.h: 200:             data(0x06);
  1564  0118  3006               	movlw	6
  1565  0119  3185  25A9  3180   	fcall	_data
  1566                           
  1567                           ;./LCD.h: 201:             data(0x41);
  1568  011C  3041               	movlw	65
  1569  011D  3185  25A9  3180   	fcall	_data
  1570                           
  1571                           ;./LCD.h: 202:             data(0x41);
  1572  0120  3041               	movlw	65
  1573  0121  3185  25A9  3180   	fcall	_data
  1574                           
  1575                           ;./LCD.h: 203:             data(0x41);
  1576  0124  3041               	movlw	65
  1577  0125  3185  25A9  3180   	fcall	_data
  1578                           
  1579                           ;./LCD.h: 204:             data(0x7E);
  1580  0128  307E               	movlw	126
  1581  0129  3185  25A9  3180   	fcall	_data
  1582                           
  1583                           ;./LCD.h: 205:             data(0x00);
  1584  012C  3000               	movlw	0
  1585  012D  3185  25A9         	fcall	_data
  1586                           
  1587                           ;./LCD.h: 206:             break;
  1588  012F  0008               	return
  1589  0130                     l1319:	
  1590                           
  1591                           ;./LCD.h: 209:         {;./LCD.h: 210:             data(0x7F);
  1592  0130  307F               	movlw	127
  1593  0131  3185  25A9  3180   	fcall	_data
  1594                           
  1595                           ;./LCD.h: 211:             data(0x8);
  1596  0134  3008               	movlw	8
  1597  0135  3185  25A9  3180   	fcall	_data
  1598                           
  1599                           ;./LCD.h: 212:             data(0x14);
  1600  0138  3014               	movlw	20
  1601  0139  3185  25A9  3180   	fcall	_data
  1602                           
  1603                           ;./LCD.h: 213:             data(0x22);
  1604  013C  3022               	movlw	34
  1605  013D  3185  25A9  3180   	fcall	_data
  1606                           
  1607                           ;./LCD.h: 214:             data(0x41);
  1608  0140  3041               	movlw	65
  1609  0141  3185  25A9  3180   	fcall	_data
  1610                           
  1611                           ;./LCD.h: 215:             data(0x00);
  1612  0144  3000               	movlw	0
  1613  0145  3185  25A9         	fcall	_data
  1614                           
  1615                           ;./LCD.h: 216:             break;
  1616  0147  0008               	return
  1617  0148                     l1321:	
  1618                           
  1619                           ;./LCD.h: 219:         {;./LCD.h: 220:             data(0x7F);
  1620  0148  307F               	movlw	127
  1621  0149  3185  25A9  3180   	fcall	_data
  1622                           
  1623                           ;./LCD.h: 221:             data(0x01);
  1624  014C  3001               	movlw	1
  1625  014D  3185  25A9  3180   	fcall	_data
  1626                           
  1627                           ;./LCD.h: 222:             data(0x01);
  1628  0150  3001               	movlw	1
  1629  0151  3185  25A9  3180   	fcall	_data
  1630                           
  1631                           ;./LCD.h: 223:             data(0x01);
  1632  0154  3001               	movlw	1
  1633  0155  3185  25A9  3180   	fcall	_data
  1634                           
  1635                           ;./LCD.h: 224:             data(0x01);
  1636  0158  3001               	movlw	1
  1637  0159  3185  25A9  3180   	fcall	_data
  1638                           
  1639                           ;./LCD.h: 225:             data(0x00);
  1640  015C  3000               	movlw	0
  1641  015D  3185  25A9         	fcall	_data
  1642                           
  1643                           ;./LCD.h: 226:             break;
  1644  015F  0008               	return
  1645  0160                     l1323:	
  1646                           
  1647                           ;./LCD.h: 229:         {;./LCD.h: 230:             data(0x7F);
  1648  0160  307F               	movlw	127
  1649  0161  3185  25A9  3180   	fcall	_data
  1650                           
  1651                           ;./LCD.h: 231:             data(0x20);
  1652  0164  3020               	movlw	32
  1653  0165  3185  25A9  3180   	fcall	_data
  1654                           
  1655                           ;./LCD.h: 232:             data(0x10);
  1656  0168  3010               	movlw	16
  1657  0169  3185  25A9  3180   	fcall	_data
  1658                           
  1659                           ;./LCD.h: 233:             data(0x20);
  1660  016C  3020               	movlw	32
  1661  016D  3185  25A9  3180   	fcall	_data
  1662                           
  1663                           ;./LCD.h: 234:             data(0x7F);
  1664  0170  307F               	movlw	127
  1665  0171  3185  25A9  3180   	fcall	_data
  1666                           
  1667                           ;./LCD.h: 235:             data(0x00);
  1668  0174  3000               	movlw	0
  1669  0175  3185  25A9         	fcall	_data
  1670                           
  1671                           ;./LCD.h: 236:             break;
  1672  0177  0008               	return
  1673  0178                     l1325:	
  1674                           
  1675                           ;./LCD.h: 239:         {;./LCD.h: 240:             data(0x7F);
  1676  0178  307F               	movlw	127
  1677  0179  3185  25A9  3180   	fcall	_data
  1678                           
  1679                           ;./LCD.h: 241:             data(0x10);
  1680  017C  3010               	movlw	16
  1681  017D  3185  25A9  3180   	fcall	_data
  1682                           
  1683                           ;./LCD.h: 242:             data(0x08);
  1684  0180  3008               	movlw	8
  1685  0181  3185  25A9  3180   	fcall	_data
  1686                           
  1687                           ;./LCD.h: 243:             data(0x04);
  1688  0184  3004               	movlw	4
  1689  0185  3185  25A9  3180   	fcall	_data
  1690                           
  1691                           ;./LCD.h: 244:             data(0x7F);
  1692  0188  307F               	movlw	127
  1693  0189  3185  25A9  3180   	fcall	_data
  1694                           
  1695                           ;./LCD.h: 245:             data(0x00);
  1696  018C  3000               	movlw	0
  1697  018D  3185  25A9         	fcall	_data
  1698                           
  1699                           ;./LCD.h: 246:             break;
  1700  018F  0008               	return
  1701  0190                     l1327:	
  1702                           
  1703                           ;./LCD.h: 249:         {;./LCD.h: 250:             data(0x3E);
  1704  0190  303E               	movlw	62
  1705  0191  3185  25A9  3180   	fcall	_data
  1706                           
  1707                           ;./LCD.h: 251:             data(0x41);
  1708  0194  3041               	movlw	65
  1709  0195  3185  25A9  3180   	fcall	_data
  1710                           
  1711                           ;./LCD.h: 252:             data(0x41);
  1712  0198  3041               	movlw	65
  1713  0199  3185  25A9  3180   	fcall	_data
  1714                           
  1715                           ;./LCD.h: 253:             data(0x41);
  1716  019C  3041               	movlw	65
  1717  019D  3185  25A9  3180   	fcall	_data
  1718                           
  1719                           ;./LCD.h: 254:             data(0x3E);
  1720  01A0  303E               	movlw	62
  1721  01A1  3185  25A9  3180   	fcall	_data
  1722                           
  1723                           ;./LCD.h: 255:             data(0x00);
  1724  01A4  3000               	movlw	0
  1725  01A5  3185  25A9         	fcall	_data
  1726                           
  1727                           ;./LCD.h: 256:             break;
  1728  01A7  0008               	return
  1729  01A8                     l1329:	
  1730                           
  1731                           ;./LCD.h: 259:         {;./LCD.h: 260:             data(0x7F);
  1732  01A8  307F               	movlw	127
  1733  01A9  3185  25A9  3180   	fcall	_data
  1734                           
  1735                           ;./LCD.h: 261:             data(0x48);
  1736  01AC  3048               	movlw	72
  1737  01AD  3185  25A9  3180   	fcall	_data
  1738                           
  1739                           ;./LCD.h: 262:             data(0x48);
  1740  01B0  3048               	movlw	72
  1741  01B1  3185  25A9  3180   	fcall	_data
  1742                           
  1743                           ;./LCD.h: 263:             data(0x48);
  1744  01B4  3048               	movlw	72
  1745  01B5  3185  25A9  3180   	fcall	_data
  1746                           
  1747                           ;./LCD.h: 264:             data(0x30);
  1748  01B8  3030               	movlw	48
  1749  01B9  3185  25A9  3180   	fcall	_data
  1750                           
  1751                           ;./LCD.h: 265:             data(0x00);
  1752  01BC  3000               	movlw	0
  1753  01BD  3185  25A9         	fcall	_data
  1754                           
  1755                           ;./LCD.h: 266:             break;
  1756  01BF  0008               	return
  1757  01C0                     l1331:	
  1758                           
  1759                           ;./LCD.h: 269:         {;./LCD.h: 270:             data(0x3E);
  1760  01C0  303E               	movlw	62
  1761  01C1  3185  25A9  3180   	fcall	_data
  1762                           
  1763                           ;./LCD.h: 271:             data(0x41);
  1764  01C4  3041               	movlw	65
  1765  01C5  3185  25A9  3180   	fcall	_data
  1766                           
  1767                           ;./LCD.h: 272:             data(0x41);
  1768  01C8  3041               	movlw	65
  1769  01C9  3185  25A9  3180   	fcall	_data
  1770                           
  1771                           ;./LCD.h: 273:             data(0x42);
  1772  01CC  3042               	movlw	66
  1773  01CD  3185  25A9  3180   	fcall	_data
  1774                           
  1775                           ;./LCD.h: 274:             data(0x3D);
  1776  01D0  303D               	movlw	61
  1777  01D1  3185  25A9  3180   	fcall	_data
  1778                           
  1779                           ;./LCD.h: 275:             data(0x00);
  1780  01D4  3000               	movlw	0
  1781  01D5  3185  25A9         	fcall	_data
  1782                           
  1783                           ;./LCD.h: 276:             break;
  1784  01D7  0008               	return
  1785  01D8                     l1333:	
  1786                           
  1787                           ;./LCD.h: 279:         {;./LCD.h: 280:             data(0x7F);
  1788  01D8  307F               	movlw	127
  1789  01D9  3185  25A9  3180   	fcall	_data
  1790                           
  1791                           ;./LCD.h: 281:             data(0x48);
  1792  01DC  3048               	movlw	72
  1793  01DD  3185  25A9  3180   	fcall	_data
  1794                           
  1795                           ;./LCD.h: 282:             data(0x48);
  1796  01E0  3048               	movlw	72
  1797  01E1  3185  25A9  3180   	fcall	_data
  1798                           
  1799                           ;./LCD.h: 283:             data(0x4C);
  1800  01E4  304C               	movlw	76
  1801  01E5  3185  25A9  3180   	fcall	_data
  1802                           
  1803                           ;./LCD.h: 284:             data(0x33);
  1804  01E8  3033               	movlw	51
  1805  01E9  3185  25A9  3180   	fcall	_data
  1806                           
  1807                           ;./LCD.h: 285:             data(0x00);
  1808  01EC  3000               	movlw	0
  1809  01ED  3185  25A9         	fcall	_data
  1810                           
  1811                           ;./LCD.h: 286:             break;
  1812  01EF  0008               	return
  1813  01F0                     l1335:	
  1814                           
  1815                           ;./LCD.h: 289:         {;./LCD.h: 290:             data(0x32);
  1816  01F0  3032               	movlw	50
  1817  01F1  3185  25A9  3180   	fcall	_data
  1818                           
  1819                           ;./LCD.h: 291:             data(0x49);
  1820  01F4  3049               	movlw	73
  1821  01F5  3185  25A9  3180   	fcall	_data
  1822                           
  1823                           ;./LCD.h: 292:             data(0x49);
  1824  01F8  3049               	movlw	73
  1825  01F9  3185  25A9  3180   	fcall	_data
  1826                           
  1827                           ;./LCD.h: 293:             data(0x49);
  1828  01FC  3049               	movlw	73
  1829  01FD  3185  25A9  3180   	fcall	_data
  1830                           
  1831                           ;./LCD.h: 294:             data(0x26);
  1832  0200  3026               	movlw	38
  1833  0201  3185  25A9  3180   	fcall	_data
  1834                           
  1835                           ;./LCD.h: 295:             data(0x00);
  1836  0204  3000               	movlw	0
  1837  0205  3185  25A9         	fcall	_data
  1838                           
  1839                           ;./LCD.h: 296:             break;
  1840  0207  0008               	return
  1841  0208                     l1337:	
  1842                           
  1843                           ;./LCD.h: 299:         {;./LCD.h: 300:             data(0x40);
  1844  0208  3040               	movlw	64
  1845  0209  3185  25A9  3180   	fcall	_data
  1846                           
  1847                           ;./LCD.h: 301:             data(0x40);
  1848  020C  3040               	movlw	64
  1849  020D  3185  25A9  3180   	fcall	_data
  1850                           
  1851                           ;./LCD.h: 302:             data(0x7F);
  1852  0210  307F               	movlw	127
  1853  0211  3185  25A9  3180   	fcall	_data
  1854                           
  1855                           ;./LCD.h: 303:             data(0x40);
  1856  0214  3040               	movlw	64
  1857  0215  3185  25A9  3180   	fcall	_data
  1858                           
  1859                           ;./LCD.h: 304:             data(0x40);
  1860  0218  3040               	movlw	64
  1861  0219  3185  25A9  3180   	fcall	_data
  1862                           
  1863                           ;./LCD.h: 305:             data(0x00);
  1864  021C  3000               	movlw	0
  1865  021D  3185  25A9         	fcall	_data
  1866                           
  1867                           ;./LCD.h: 306:             break;
  1868  021F  0008               	return
  1869  0220                     l1339:	
  1870                           
  1871                           ;./LCD.h: 309:         {;./LCD.h: 310:             data(0x7E);
  1872  0220  307E               	movlw	126
  1873  0221  3185  25A9  3180   	fcall	_data
  1874                           
  1875                           ;./LCD.h: 311:             data(0x01);
  1876  0224  3001               	movlw	1
  1877  0225  3185  25A9  3180   	fcall	_data
  1878                           
  1879                           ;./LCD.h: 312:             data(0x01);
  1880  0228  3001               	movlw	1
  1881  0229  3185  25A9  3180   	fcall	_data
  1882                           
  1883                           ;./LCD.h: 313:             data(0x01);
  1884  022C  3001               	movlw	1
  1885  022D  3185  25A9  3180   	fcall	_data
  1886                           
  1887                           ;./LCD.h: 314:             data(0x7E);
  1888  0230  307E               	movlw	126
  1889  0231  3185  25A9  3180   	fcall	_data
  1890                           
  1891                           ;./LCD.h: 315:             data(0x00);
  1892  0234  3000               	movlw	0
  1893  0235  3185  25A9         	fcall	_data
  1894                           
  1895                           ;./LCD.h: 316:             break;
  1896  0237  0008               	return
  1897  0238                     l1341:	
  1898                           
  1899                           ;./LCD.h: 319:         {;./LCD.h: 320:             data(0x70);
  1900  0238  3070               	movlw	112
  1901  0239  3185  25A9  3180   	fcall	_data
  1902                           
  1903                           ;./LCD.h: 321:             data(0x0C);
  1904  023C  300C               	movlw	12
  1905  023D  3185  25A9  3180   	fcall	_data
  1906                           
  1907                           ;./LCD.h: 322:             data(0x03);
  1908  0240  3003               	movlw	3
  1909  0241  3185  25A9  3180   	fcall	_data
  1910                           
  1911                           ;./LCD.h: 323:             data(0x0C);
  1912  0244  300C               	movlw	12
  1913  0245  3185  25A9  3180   	fcall	_data
  1914                           
  1915                           ;./LCD.h: 324:             data(0x70);
  1916  0248  3070               	movlw	112
  1917  0249  3185  25A9  3180   	fcall	_data
  1918                           
  1919                           ;./LCD.h: 325:             data(0x00);
  1920  024C  3000               	movlw	0
  1921  024D  3185  25A9         	fcall	_data
  1922                           
  1923                           ;./LCD.h: 326:             break;
  1924  024F  0008               	return
  1925  0250                     l1343:	
  1926                           
  1927                           ;./LCD.h: 329:         {;./LCD.h: 330:             data(0x7C);
  1928  0250  307C               	movlw	124
  1929  0251  3185  25A9  3180   	fcall	_data
  1930                           
  1931                           ;./LCD.h: 331:             data(0x03);
  1932  0254  3003               	movlw	3
  1933  0255  3185  25A9  3180   	fcall	_data
  1934                           
  1935                           ;./LCD.h: 332:             data(0x1C);
  1936  0258  301C               	movlw	28
  1937  0259  3185  25A9  3180   	fcall	_data
  1938                           
  1939                           ;./LCD.h: 333:             data(0x03);
  1940  025C  3003               	movlw	3
  1941  025D  3185  25A9  3180   	fcall	_data
  1942                           
  1943                           ;./LCD.h: 334:             data(0x7C);
  1944  0260  307C               	movlw	124
  1945  0261  3185  25A9  3180   	fcall	_data
  1946                           
  1947                           ;./LCD.h: 335:             data(0x00);
  1948  0264  3000               	movlw	0
  1949  0265  3185  25A9         	fcall	_data
  1950                           
  1951                           ;./LCD.h: 336:             break;
  1952  0267  0008               	return
  1953  0268                     l1345:	
  1954                           
  1955                           ;./LCD.h: 339:         {;./LCD.h: 340:             data(0x63);
  1956  0268  3063               	movlw	99
  1957  0269  3185  25A9  3180   	fcall	_data
  1958                           
  1959                           ;./LCD.h: 341:             data(0x14);
  1960  026C  3014               	movlw	20
  1961  026D  3185  25A9  3180   	fcall	_data
  1962                           
  1963                           ;./LCD.h: 342:             data(0x08);
  1964  0270  3008               	movlw	8
  1965  0271  3185  25A9  3180   	fcall	_data
  1966                           
  1967                           ;./LCD.h: 343:             data(0x14);
  1968  0274  3014               	movlw	20
  1969  0275  3185  25A9  3180   	fcall	_data
  1970                           
  1971                           ;./LCD.h: 344:             data(0x63);
  1972  0278  3063               	movlw	99
  1973  0279  3185  25A9  3180   	fcall	_data
  1974                           
  1975                           ;./LCD.h: 345:             data(0x00);
  1976  027C  3000               	movlw	0
  1977  027D  3185  25A9         	fcall	_data
  1978                           
  1979                           ;./LCD.h: 346:             break;
  1980  027F  0008               	return
  1981  0280                     l1347:	
  1982                           
  1983                           ;./LCD.h: 349:         {;./LCD.h: 350:             data(0x09);
  1984  0280  3009               	movlw	9
  1985  0281  3185  25A9  3180   	fcall	_data
  1986                           
  1987                           ;./LCD.h: 351:             data(0x12);
  1988  0284  3012               	movlw	18
  1989  0285  3185  25A9  3180   	fcall	_data
  1990                           
  1991                           ;./LCD.h: 352:             data(0x0E);
  1992  0288  300E               	movlw	14
  1993  0289  3185  25A9  3180   	fcall	_data
  1994                           
  1995                           ;./LCD.h: 353:             data(0x09);
  1996  028C  3009               	movlw	9
  1997  028D  3185  25A9  3180   	fcall	_data
  1998                           
  1999                           ;./LCD.h: 354:             data(0x12);
  2000  0290  3012               	movlw	18
  2001  0291  3185  25A9  3180   	fcall	_data
  2002                           
  2003                           ;./LCD.h: 355:             data(0x00);
  2004  0294  3000               	movlw	0
  2005  0295  3185  25A9         	fcall	_data
  2006                           
  2007                           ;./LCD.h: 356:             break;
  2008  0297  0008               	return
  2009  0298                     l1349:	
  2010                           
  2011                           ;./LCD.h: 359:         {;./LCD.h: 360:             data(0x60);
  2012  0298  3060               	movlw	96
  2013  0299  3185  25A9  3180   	fcall	_data
  2014                           
  2015                           ;./LCD.h: 361:             data(0x10);
  2016  029C  3010               	movlw	16
  2017  029D  3185  25A9  3180   	fcall	_data
  2018                           
  2019                           ;./LCD.h: 362:             data(0x0F);
  2020  02A0  300F               	movlw	15
  2021  02A1  3185  25A9  3180   	fcall	_data
  2022                           
  2023                           ;./LCD.h: 363:             data(0x10);
  2024  02A4  3010               	movlw	16
  2025  02A5  3185  25A9  3180   	fcall	_data
  2026                           
  2027                           ;./LCD.h: 364:             data(0x60);
  2028  02A8  3060               	movlw	96
  2029  02A9  3185  25A9  3180   	fcall	_data
  2030                           
  2031                           ;./LCD.h: 365:             data(0x00);
  2032  02AC  3000               	movlw	0
  2033  02AD  3185  25A9         	fcall	_data
  2034                           
  2035                           ;./LCD.h: 366:             break;
  2036  02AF  0008               	return
  2037  02B0                     l1351:	
  2038                           
  2039                           ;./LCD.h: 369:         {;./LCD.h: 370:             data(0x43);
  2040  02B0  3043               	movlw	67
  2041  02B1  3185  25A9  3180   	fcall	_data
  2042                           
  2043                           ;./LCD.h: 371:             data(0x45);
  2044  02B4  3045               	movlw	69
  2045  02B5  3185  25A9  3180   	fcall	_data
  2046                           
  2047                           ;./LCD.h: 372:             data(0x49);
  2048  02B8  3049               	movlw	73
  2049  02B9  3185  25A9  3180   	fcall	_data
  2050                           
  2051                           ;./LCD.h: 373:             data(0x51);
  2052  02BC  3051               	movlw	81
  2053  02BD  3185  25A9  3180   	fcall	_data
  2054                           
  2055                           ;./LCD.h: 374:             data(0x61);
  2056  02C0  3061               	movlw	97
  2057  02C1  3185  25A9  3180   	fcall	_data
  2058                           
  2059                           ;./LCD.h: 375:             data(0x00);
  2060  02C4  3000               	movlw	0
  2061  02C5  3185  25A9         	fcall	_data
  2062                           
  2063                           ;./LCD.h: 376:             break;
  2064  02C7  0008               	return
  2065  02C8                     l1353:	
  2066                           
  2067                           ;./LCD.h: 379:         {;./LCD.h: 380:             data(0x3E);
  2068  02C8  303E               	movlw	62
  2069  02C9  3185  25A9  3180   	fcall	_data
  2070                           
  2071                           ;./LCD.h: 381:             data(0x51);
  2072  02CC  3051               	movlw	81
  2073  02CD  3185  25A9  3180   	fcall	_data
  2074                           
  2075                           ;./LCD.h: 382:             data(0x49);
  2076  02D0  3049               	movlw	73
  2077  02D1  3185  25A9  3180   	fcall	_data
  2078                           
  2079                           ;./LCD.h: 383:             data(0x45);
  2080  02D4  3045               	movlw	69
  2081  02D5  3185  25A9  3180   	fcall	_data
  2082                           
  2083                           ;./LCD.h: 384:             data(0x3E);
  2084  02D8  303E               	movlw	62
  2085  02D9  3185  25A9  3180   	fcall	_data
  2086                           
  2087                           ;./LCD.h: 385:             data(0x00);
  2088  02DC  3000               	movlw	0
  2089  02DD  3185  25A9         	fcall	_data
  2090                           
  2091                           ;./LCD.h: 386:             break;
  2092  02DF  0008               	return
  2093  02E0                     l1355:	
  2094                           
  2095                           ;./LCD.h: 389:         {;./LCD.h: 390:             data(0x00);
  2096  02E0  3000               	movlw	0
  2097  02E1  3185  25A9  3180   	fcall	_data
  2098                           
  2099                           ;./LCD.h: 391:             data(0x21);
  2100  02E4  3021               	movlw	33
  2101  02E5  3185  25A9  3180   	fcall	_data
  2102                           
  2103                           ;./LCD.h: 392:             data(0x7F);
  2104  02E8  307F               	movlw	127
  2105  02E9  3185  25A9  3180   	fcall	_data
  2106                           
  2107                           ;./LCD.h: 393:             data(0x01);
  2108  02EC  3001               	movlw	1
  2109  02ED  3185  25A9  3180   	fcall	_data
  2110                           
  2111                           ;./LCD.h: 394:             data(0x00);
  2112  02F0  3000               	movlw	0
  2113  02F1  3185  25A9  3180   	fcall	_data
  2114                           
  2115                           ;./LCD.h: 395:             data(0x00);
  2116  02F4  3000               	movlw	0
  2117  02F5  3185  25A9         	fcall	_data
  2118                           
  2119                           ;./LCD.h: 396:             break;
  2120  02F7  0008               	return
  2121  02F8                     l1357:	
  2122                           
  2123                           ;./LCD.h: 399:         {;./LCD.h: 400:             data(0x33);
  2124  02F8  3033               	movlw	51
  2125  02F9  3185  25A9  3180   	fcall	_data
  2126                           
  2127                           ;./LCD.h: 401:             data(0x45);
  2128  02FC  3045               	movlw	69
  2129  02FD  3185  25A9  3180   	fcall	_data
  2130                           
  2131                           ;./LCD.h: 402:             data(0x49);
  2132  0300  3049               	movlw	73
  2133  0301  3185  25A9  3180   	fcall	_data
  2134                           
  2135                           ;./LCD.h: 403:             data(0x49);
  2136  0304  3049               	movlw	73
  2137  0305  3185  25A9  3180   	fcall	_data
  2138                           
  2139                           ;./LCD.h: 404:             data(0x31);
  2140  0308  3031               	movlw	49
  2141  0309  3185  25A9  3180   	fcall	_data
  2142                           
  2143                           ;./LCD.h: 405:             data(0x00);
  2144  030C  3000               	movlw	0
  2145  030D  3185  25A9         	fcall	_data
  2146                           
  2147                           ;./LCD.h: 406:             break;
  2148  030F  0008               	return
  2149  0310                     l1359:	
  2150                           
  2151                           ;./LCD.h: 409:         {;./LCD.h: 410:             data(0x22);
  2152  0310  3022               	movlw	34
  2153  0311  3185  25A9  3180   	fcall	_data
  2154                           
  2155                           ;./LCD.h: 411:             data(0x41);
  2156  0314  3041               	movlw	65
  2157  0315  3185  25A9  3180   	fcall	_data
  2158                           
  2159                           ;./LCD.h: 412:             data(0x49);
  2160  0318  3049               	movlw	73
  2161  0319  3185  25A9  3180   	fcall	_data
  2162                           
  2163                           ;./LCD.h: 413:             data(0x49);
  2164  031C  3049               	movlw	73
  2165  031D  3185  25A9  3180   	fcall	_data
  2166                           
  2167                           ;./LCD.h: 414:             data(0x36);
  2168  0320  3036               	movlw	54
  2169  0321  3185  25A9  3180   	fcall	_data
  2170                           
  2171                           ;./LCD.h: 415:             data(0x00);
  2172  0324  3000               	movlw	0
  2173  0325  3185  25A9         	fcall	_data
  2174                           
  2175                           ;./LCD.h: 416:             break;
  2176  0327  0008               	return
  2177  0328                     l1361:	
  2178                           
  2179                           ;./LCD.h: 419:         {;./LCD.h: 420:             data(0x78);
  2180  0328  3078               	movlw	120
  2181  0329  3185  25A9  3180   	fcall	_data
  2182                           
  2183                           ;./LCD.h: 421:             data(0x08);
  2184  032C  3008               	movlw	8
  2185  032D  3185  25A9  3180   	fcall	_data
  2186                           
  2187                           ;./LCD.h: 422:             data(0x08);
  2188  0330  3008               	movlw	8
  2189  0331  3185  25A9  3180   	fcall	_data
  2190                           
  2191                           ;./LCD.h: 423:             data(0x08);
  2192  0334  3008               	movlw	8
  2193  0335  3185  25A9  3180   	fcall	_data
  2194                           
  2195                           ;./LCD.h: 424:             data(0x7F);
  2196  0338  307F               	movlw	127
  2197  0339  3185  25A9  3180   	fcall	_data
  2198                           
  2199                           ;./LCD.h: 425:             data(0x00);
  2200  033C  3000               	movlw	0
  2201  033D  3185  25A9         	fcall	_data
  2202                           
  2203                           ;./LCD.h: 426:             break;
  2204  033F  0008               	return
  2205  0340                     l1363:	
  2206                           
  2207                           ;./LCD.h: 429:         {;./LCD.h: 430:             data(0x7A);
  2208  0340  307A               	movlw	122
  2209  0341  3185  25A9  3180   	fcall	_data
  2210                           
  2211                           ;./LCD.h: 431:             data(0x49);
  2212  0344  3049               	movlw	73
  2213  0345  3185  25A9  3180   	fcall	_data
  2214                           
  2215                           ;./LCD.h: 432:             data(0x49);
  2216  0348  3049               	movlw	73
  2217  0349  3185  25A9  3180   	fcall	_data
  2218                           
  2219                           ;./LCD.h: 433:             data(0x49);
  2220  034C  3049               	movlw	73
  2221  034D  3185  25A9  3180   	fcall	_data
  2222                           
  2223                           ;./LCD.h: 434:             data(0x46);
  2224  0350  3046               	movlw	70
  2225  0351  3185  25A9  3180   	fcall	_data
  2226                           
  2227                           ;./LCD.h: 435:             data(0x00);
  2228  0354  3000               	movlw	0
  2229  0355  3185  25A9         	fcall	_data
  2230                           
  2231                           ;./LCD.h: 436:             break;
  2232  0357  0008               	return
  2233  0358                     l1365:	
  2234                           
  2235                           ;./LCD.h: 439:         {;./LCD.h: 440:             data(0x3E);
  2236  0358  303E               	movlw	62
  2237  0359  3185  25A9  3180   	fcall	_data
  2238                           
  2239                           ;./LCD.h: 441:             data(0x49);
  2240  035C  3049               	movlw	73
  2241  035D  3185  25A9  3180   	fcall	_data
  2242                           
  2243                           ;./LCD.h: 442:             data(0x49);
  2244  0360  3049               	movlw	73
  2245  0361  3185  25A9  3180   	fcall	_data
  2246                           
  2247                           ;./LCD.h: 443:             data(0x49);
  2248  0364  3049               	movlw	73
  2249  0365  3185  25A9  3180   	fcall	_data
  2250                           
  2251                           ;./LCD.h: 444:             data(0x26);
  2252  0368  3026               	movlw	38
  2253  0369  3185  25A9  3180   	fcall	_data
  2254                           
  2255                           ;./LCD.h: 445:             data(0x00);
  2256  036C  3000               	movlw	0
  2257  036D  3185  25A9         	fcall	_data
  2258                           
  2259                           ;./LCD.h: 446:             break;
  2260  036F  0008               	return
  2261  0370                     l1367:	
  2262                           
  2263                           ;./LCD.h: 449:         {;./LCD.h: 450:             data(0x60);
  2264  0370  3060               	movlw	96
  2265  0371  3185  25A9  3180   	fcall	_data
  2266                           
  2267                           ;./LCD.h: 451:             data(0x41);
  2268  0374  3041               	movlw	65
  2269  0375  3185  25A9  3180   	fcall	_data
  2270                           
  2271                           ;./LCD.h: 452:             data(0x46);
  2272  0378  3046               	movlw	70
  2273  0379  3185  25A9  3180   	fcall	_data
  2274                           
  2275                           ;./LCD.h: 453:             data(0x58);
  2276  037C  3058               	movlw	88
  2277  037D  3185  25A9  3180   	fcall	_data
  2278                           
  2279                           ;./LCD.h: 454:             data(0x60);
  2280  0380  3060               	movlw	96
  2281  0381  3185  25A9  3180   	fcall	_data
  2282                           
  2283                           ;./LCD.h: 455:             data(0x00);
  2284  0384  3000               	movlw	0
  2285  0385  3185  25A9         	fcall	_data
  2286                           
  2287                           ;./LCD.h: 456:             break;
  2288  0387  0008               	return
  2289  0388                     l1369:	
  2290                           
  2291                           ;./LCD.h: 459:         {;./LCD.h: 460:             data(0x36);
  2292  0388  3036               	movlw	54
  2293  0389  3185  25A9  3180   	fcall	_data
  2294                           
  2295                           ;./LCD.h: 461:             data(0x49);
  2296  038C  3049               	movlw	73
  2297  038D  3185  25A9  3180   	fcall	_data
  2298                           
  2299                           ;./LCD.h: 462:             data(0x49);
  2300  0390  3049               	movlw	73
  2301  0391  3185  25A9  3180   	fcall	_data
  2302                           
  2303                           ;./LCD.h: 463:             data(0x49);
  2304  0394  3049               	movlw	73
  2305  0395  3185  25A9  3180   	fcall	_data
  2306                           
  2307                           ;./LCD.h: 464:             data(0x36);
  2308  0398  3036               	movlw	54
  2309  0399  3185  25A9  3180   	fcall	_data
  2310                           
  2311                           ;./LCD.h: 465:             data(0x00);
  2312  039C  3000               	movlw	0
  2313  039D  3185  25A9         	fcall	_data
  2314                           
  2315                           ;./LCD.h: 466:             break;
  2316  039F  0008               	return
  2317  03A0                     l1371:	
  2318                           
  2319                           ;./LCD.h: 469:         {;./LCD.h: 470:             data(0x32);
  2320  03A0  3032               	movlw	50
  2321  03A1  3185  25A9  3180   	fcall	_data
  2322                           
  2323                           ;./LCD.h: 471:             data(0x49);
  2324  03A4  3049               	movlw	73
  2325  03A5  3185  25A9  3180   	fcall	_data
  2326                           
  2327                           ;./LCD.h: 472:             data(0x49);
  2328  03A8  3049               	movlw	73
  2329  03A9  3185  25A9  3180   	fcall	_data
  2330                           
  2331                           ;./LCD.h: 473:             data(0x49);
  2332  03AC  3049               	movlw	73
  2333  03AD  3185  25A9  3180   	fcall	_data
  2334                           
  2335                           ;./LCD.h: 474:             data(0x3E);
  2336  03B0  303E               	movlw	62
  2337  03B1  3185  25A9  3180   	fcall	_data
  2338                           
  2339                           ;./LCD.h: 475:             data(0x00);
  2340  03B4  3000               	movlw	0
  2341  03B5  3185  25A9         	fcall	_data
  2342                           
  2343                           ;./LCD.h: 476:             break;
  2344  03B7  0008               	return
  2345  03B8                     l1373:	
  2346                           
  2347                           ;./LCD.h: 479:         {;./LCD.h: 480:             data(0x00);
  2348  03B8  3000               	movlw	0
  2349  03B9  3185  25A9  3180   	fcall	_data
  2350                           
  2351                           ;./LCD.h: 481:             data(0x00);
  2352  03BC  3000               	movlw	0
  2353  03BD  3185  25A9  3180   	fcall	_data
  2354                           
  2355                           ;./LCD.h: 482:             data(0x00);
  2356  03C0  3000               	movlw	0
  2357  03C1  3185  25A9  3180   	fcall	_data
  2358                           
  2359                           ;./LCD.h: 483:             data(0x00);
  2360  03C4  3000               	movlw	0
  2361  03C5  3185  25A9  3180   	fcall	_data
  2362                           
  2363                           ;./LCD.h: 484:             data(0x00);
  2364  03C8  3000               	movlw	0
  2365  03C9  3185  25A9  3180   	fcall	_data
  2366                           
  2367                           ;./LCD.h: 485:             data(0x00);
  2368  03CC  3000               	movlw	0
  2369  03CD  3185  25A9         	fcall	_data
  2370                           
  2371                           ;./LCD.h: 486:             break;
  2372  03CF  0008               	return
  2373  03D0                     l1375:	
  2374                           
  2375                           ;./LCD.h: 489:         {;./LCD.h: 490:             data(0x00);
  2376  03D0  3000               	movlw	0
  2377  03D1  3185  25A9  3180   	fcall	_data
  2378                           
  2379                           ;./LCD.h: 491:             data(0x00);
  2380  03D4  3000               	movlw	0
  2381  03D5  3185  25A9  3180   	fcall	_data
  2382                           
  2383                           ;./LCD.h: 492:             data(0x24);
  2384  03D8  3024               	movlw	36
  2385  03D9  3185  25A9  3180   	fcall	_data
  2386                           
  2387                           ;./LCD.h: 493:             data(0x00);
  2388  03DC  3000               	movlw	0
  2389  03DD  3185  25A9  3180   	fcall	_data
  2390                           
  2391                           ;./LCD.h: 494:             data(0x00);
  2392  03E0  3000               	movlw	0
  2393  03E1  3185  25A9  3180   	fcall	_data
  2394                           
  2395                           ;./LCD.h: 495:             data(0x00);
  2396  03E4  3000               	movlw	0
  2397  03E5  3185  25A9         	fcall	_data
  2398                           
  2399                           ;./LCD.h: 496:             break;
  2400  03E7  0008               	return
  2401  03E8                     l1377:	
  2402                           
  2403                           ;./LCD.h: 499:         {;./LCD.h: 500:             data(0x00);
  2404  03E8  3000               	movlw	0
  2405  03E9  3185  25A9  3180   	fcall	_data
  2406                           
  2407                           ;./LCD.h: 501:             data(0x00);
  2408  03EC  3000               	movlw	0
  2409  03ED  3185  25A9  3180   	fcall	_data
  2410                           
  2411                           ;./LCD.h: 502:             data(0x01);
  2412  03F0  3001               	movlw	1
  2413  03F1  3185  25A9  3180   	fcall	_data
  2414                           
  2415                           ;./LCD.h: 503:             data(0x00);
  2416  03F4  3000               	movlw	0
  2417  03F5  3185  25A9  3180   	fcall	_data
  2418                           
  2419                           ;./LCD.h: 504:             data(0x00);
  2420  03F8  3000               	movlw	0
  2421  03F9  3185  25A9  3180   	fcall	_data
  2422                           
  2423                           ;./LCD.h: 505:             data(0x00);
  2424  03FC  3000               	movlw	0
  2425  03FD  3185  25A9         	fcall	_data
  2426                           
  2427                           ;./LCD.h: 506:             break;
  2428  03FF  0008               	return
  2429  0400                     l1379:	
  2430                           
  2431                           ;./LCD.h: 509:         {;./LCD.h: 510:             data(0xFF);
  2432  0400  30FF               	movlw	255
  2433  0401  3185  25A9  3180   	fcall	_data
  2434                           
  2435                           ;./LCD.h: 511:             data(0xFF);
  2436  0404  30FF               	movlw	255
  2437  0405  3185  25A9  3180   	fcall	_data
  2438                           
  2439                           ;./LCD.h: 512:             data(0xFF);
  2440  0408  30FF               	movlw	255
  2441  0409  3185  25A9  3180   	fcall	_data
  2442                           
  2443                           ;./LCD.h: 513:             data(0xFF);
  2444  040C  30FF               	movlw	255
  2445  040D  3185  25A9  3180   	fcall	_data
  2446                           
  2447                           ;./LCD.h: 514:             data(0xFF);
  2448  0410  30FF               	movlw	255
  2449  0411  3185  25A9  3180   	fcall	_data
  2450                           
  2451                           ;./LCD.h: 515:             data(0x00);
  2452  0414  3000               	movlw	0
  2453  0415  3185  25A9         	fcall	_data
  2454                           
  2455                           ;./LCD.h: 516:             break;
  2456  0417  0008               	return
  2457  0418                     l1383:	
  2458  0418  0876               	movf	LCD_write@character,w
  2459  0419  00F4               	movwf	??_LCD_write
  2460  041A  01F5               	clrf	??_LCD_write+1
  2461                           
  2462                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2463                           ; Switch size 1, requested type "simple"
  2464                           ; Number of cases is 1, Range of values is 0 to 0
  2465                           ; switch strategies available:
  2466                           ; Name         Instructions Cycles
  2467                           ; simple_byte            4     3 (average)
  2468                           ; direct_byte            8     6 (fixed)
  2469                           ; jumptable            260     6 (fixed)
  2470                           ;	Chosen strategy is simple_byte
  2471  041B  0875               	movf	??_LCD_write+1,w
  2472  041C  3A00               	xorlw	0	; case 0
  2473  041D  1903               	skipnz
  2474  041E  2C20               	goto	l1507
  2475  041F  2C00               	goto	l1379
  2476  0420                     l1507:	
  2477                           
  2478                           ; Switch size 1, requested type "simple"
  2479                           ; Number of cases is 40, Range of values is 32 to 120
  2480                           ; switch strategies available:
  2481                           ; Name         Instructions Cycles
  2482                           ; simple_byte          121    61 (average)
  2483                           ; direct_byte          187     9 (fixed)
  2484                           ; jumptable            263     9 (fixed)
  2485                           ;	Chosen strategy is simple_byte
  2486  0420  0874               	movf	??_LCD_write,w
  2487  0421  3A20               	xorlw	32	; case 32
  2488  0422  1903               	skipnz
  2489  0423  2BB8               	goto	l1373
  2490  0424  3A0E               	xorlw	14	; case 46
  2491  0425  1903               	skipnz
  2492  0426  2BE8               	goto	l1377
  2493  0427  3A1E               	xorlw	30	; case 48
  2494  0428  1903               	skipnz
  2495  0429  2AC8               	goto	l1353
  2496  042A  3A01               	xorlw	1	; case 49
  2497  042B  1903               	skipnz
  2498  042C  2AE0               	goto	l1355
  2499  042D  3A03               	xorlw	3	; case 50
  2500  042E  1903               	skipnz
  2501  042F  2AF8               	goto	l1357
  2502  0430  3A01               	xorlw	1	; case 51
  2503  0431  1903               	skipnz
  2504  0432  2B10               	goto	l1359
  2505  0433  3A07               	xorlw	7	; case 52
  2506  0434  1903               	skipnz
  2507  0435  2B28               	goto	l1361
  2508  0436  3A01               	xorlw	1	; case 53
  2509  0437  1903               	skipnz
  2510  0438  2B40               	goto	l1363
  2511  0439  3A03               	xorlw	3	; case 54
  2512  043A  1903               	skipnz
  2513  043B  2B58               	goto	l1365
  2514  043C  3A01               	xorlw	1	; case 55
  2515  043D  1903               	skipnz
  2516  043E  2B70               	goto	l1367
  2517  043F  3A0F               	xorlw	15	; case 56
  2518  0440  1903               	skipnz
  2519  0441  2B88               	goto	l1369
  2520  0442  3A01               	xorlw	1	; case 57
  2521  0443  1903               	skipnz
  2522  0444  2BA0               	goto	l1371
  2523  0445  3A03               	xorlw	3	; case 58
  2524  0446  1903               	skipnz
  2525  0447  2BD0               	goto	l1375
  2526  0448  3A7B               	xorlw	123	; case 65
  2527  0449  1903               	skipnz
  2528  044A  2840               	goto	l1299
  2529  044B  3A03               	xorlw	3	; case 66
  2530  044C  1903               	skipnz
  2531  044D  2858               	goto	l1301
  2532  044E  3A01               	xorlw	1	; case 67
  2533  044F  1903               	skipnz
  2534  0450  2870               	goto	l1303
  2535  0451  3A07               	xorlw	7	; case 68
  2536  0452  1903               	skipnz
  2537  0453  2888               	goto	l1305
  2538  0454  3A01               	xorlw	1	; case 69
  2539  0455  1903               	skipnz
  2540  0456  28A0               	goto	l1307
  2541  0457  3A03               	xorlw	3	; case 70
  2542  0458  1903               	skipnz
  2543  0459  28B8               	goto	l1309
  2544  045A  3A01               	xorlw	1	; case 71
  2545  045B  1903               	skipnz
  2546  045C  28D0               	goto	l1311
  2547  045D  3A0F               	xorlw	15	; case 72
  2548  045E  1903               	skipnz
  2549  045F  28E8               	goto	l1313
  2550  0460  3A01               	xorlw	1	; case 73
  2551  0461  1903               	skipnz
  2552  0462  2900               	goto	l1315
  2553  0463  3A03               	xorlw	3	; case 74
  2554  0464  1903               	skipnz
  2555  0465  2918               	goto	l1317
  2556  0466  3A01               	xorlw	1	; case 75
  2557  0467  1903               	skipnz
  2558  0468  2930               	goto	l1319
  2559  0469  3A07               	xorlw	7	; case 76
  2560  046A  1903               	skipnz
  2561  046B  2948               	goto	l1321
  2562  046C  3A01               	xorlw	1	; case 77
  2563  046D  1903               	skipnz
  2564  046E  2960               	goto	l1323
  2565  046F  3A03               	xorlw	3	; case 78
  2566  0470  1903               	skipnz
  2567  0471  2978               	goto	l1325
  2568  0472  3A01               	xorlw	1	; case 79
  2569  0473  1903               	skipnz
  2570  0474  2990               	goto	l1327
  2571  0475  3A1F               	xorlw	31	; case 80
  2572  0476  1903               	skipnz
  2573  0477  29A8               	goto	l1329
  2574  0478  3A01               	xorlw	1	; case 81
  2575  0479  1903               	skipnz
  2576  047A  29C0               	goto	l1331
  2577  047B  3A03               	xorlw	3	; case 82
  2578  047C  1903               	skipnz
  2579  047D  29D8               	goto	l1333
  2580  047E  3A01               	xorlw	1	; case 83
  2581  047F  1903               	skipnz
  2582  0480  29F0               	goto	l1335
  2583  0481  3A07               	xorlw	7	; case 84
  2584  0482  1903               	skipnz
  2585  0483  2A08               	goto	l1337
  2586  0484  3A01               	xorlw	1	; case 85
  2587  0485  1903               	skipnz
  2588  0486  2A20               	goto	l1339
  2589  0487  3A03               	xorlw	3	; case 86
  2590  0488  1903               	skipnz
  2591  0489  2A38               	goto	l1341
  2592  048A  3A01               	xorlw	1	; case 87
  2593  048B  1903               	skipnz
  2594  048C  2A50               	goto	l1343
  2595  048D  3A0F               	xorlw	15	; case 88
  2596  048E  1903               	skipnz
  2597  048F  2A68               	goto	l1345
  2598  0490  3A01               	xorlw	1	; case 89
  2599  0491  1903               	skipnz
  2600  0492  2A98               	goto	l1349
  2601  0493  3A03               	xorlw	3	; case 90
  2602  0494  1903               	skipnz
  2603  0495  2AB0               	goto	l1351
  2604  0496  3A22               	xorlw	34	; case 120
  2605  0497  1903               	skipnz
  2606  0498  2A80               	goto	l1347
  2607  0499  2C00               	goto	l1379
  2608  049A  0008               	return
  2609  049B                     __end_of_LCD_write:	
  2610                           
  2611                           	psect	text3
  2612  0555                     __ptext3:	
  2613 ;; *************** function _LCD_init *****************
  2614 ;; Defined at:
  2615 ;;		line 61 in file "./LCD.h"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;		None
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;		None
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, status,0, pclath, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2629 ;;      Params:         0       0       0       0       0       0       0       0
  2630 ;;      Locals:         0       0       0       0       0       0       0       0
  2631 ;;      Temps:          0       0       0       0       0       0       0       0
  2632 ;;      Totals:         0       0       0       0       0       0       0       0
  2633 ;;Total ram usage:        0 bytes
  2634 ;; Hardware stack levels used:    1
  2635 ;; Hardware stack levels required when called:    2
  2636 ;; This function calls:
  2637 ;;		_command
  2638 ;; This function is called by:
  2639 ;;		_main
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           
  2644                           ;psect for function _LCD_init
  2645  0555                     _LCD_init:	
  2646                           
  2647                           ;./LCD.h: 63:     command(0xAE);
  2648                           
  2649                           ;incstack = 0
  2650                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  2651  0555  30AE               	movlw	174
  2652  0556  3185  25BA  3185   	fcall	_command
  2653                           
  2654                           ;./LCD.h: 64:     command(0xA0);
  2655  0559  30A0               	movlw	160
  2656  055A  3185  25BA  3185   	fcall	_command
  2657                           
  2658                           ;./LCD.h: 65:     command(0xC0);
  2659  055D  30C0               	movlw	192
  2660  055E  3185  25BA  3185   	fcall	_command
  2661                           
  2662                           ;./LCD.h: 66:     command(0xA2);
  2663  0561  30A2               	movlw	162
  2664  0562  3185  25BA  3185   	fcall	_command
  2665                           
  2666                           ;./LCD.h: 67:     command(0x2F);
  2667  0565  302F               	movlw	47
  2668  0566  3185  25BA  3185   	fcall	_command
  2669                           
  2670                           ;./LCD.h: 68:     command(0x21);
  2671  0569  3021               	movlw	33
  2672  056A  3185  25BA  3185   	fcall	_command
  2673                           
  2674                           ;./LCD.h: 69:     command(0x81);
  2675  056D  3081               	movlw	129
  2676  056E  3185  25BA  3185   	fcall	_command
  2677                           
  2678                           ;./LCD.h: 70:     command(0x20);
  2679  0571  3020               	movlw	32
  2680  0572  3185  25BA  3185   	fcall	_command
  2681                           
  2682                           ;./LCD.h: 71:     command(0xAF);
  2683  0575  30AF               	movlw	175
  2684  0576  3185  25BA         	fcall	_command
  2685  0578  0008               	return
  2686  0579                     __end_of_LCD_init:	
  2687                           
  2688                           	psect	text4
  2689  0598                     __ptext4:	
  2690 ;; *************** function _LCD_goto *****************
  2691 ;; Defined at:
  2692 ;;		line 96 in file "./LCD.h"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  page            1    wreg     unsigned char 
  2695 ;;  offset          1    4[COMMON] unsigned char 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  page            1    5[COMMON] unsigned char 
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  1    wreg      void 
  2700 ;; Registers used:
  2701 ;;		wreg, status,2, status,0, pclath, cstack
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2707 ;;      Params:         1       0       0       0       0       0       0       0
  2708 ;;      Locals:         1       0       0       0       0       0       0       0
  2709 ;;      Temps:          0       0       0       0       0       0       0       0
  2710 ;;      Totals:         2       0       0       0       0       0       0       0
  2711 ;;Total ram usage:        2 bytes
  2712 ;; Hardware stack levels used:    1
  2713 ;; Hardware stack levels required when called:    2
  2714 ;; This function calls:
  2715 ;;		_command
  2716 ;; This function is called by:
  2717 ;;		_main
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           
  2722                           ;psect for function _LCD_goto
  2723  0598                     _LCD_goto:	
  2724                           
  2725                           ;incstack = 0
  2726                           ; Regs used in _LCD_goto: [wreg+status,2+status,0+pclath+cstack]
  2727                           ;LCD_goto@page stored from wreg
  2728  0598  00F5               	movwf	LCD_goto@page
  2729                           
  2730                           ;./LCD.h: 96: void LCD_goto(uint8_t page, uint8_t offset);./LCD.h: 97: {;./LCD.h: 98:   
      +                            command(0xB0 + page);
  2731  0599  0875               	movf	LCD_goto@page,w
  2732  059A  3EB0               	addlw	176
  2733  059B  3185  25BA  3185   	fcall	_command
  2734                           
  2735                           ;./LCD.h: 99:     command(0x10 + (offset & 0xF));
  2736  059E  0874               	movf	LCD_goto@offset,w
  2737  059F  390F               	andlw	15
  2738  05A0  3E10               	addlw	16
  2739  05A1  3185  25BA  3185   	fcall	_command
  2740                           
  2741                           ;./LCD.h: 100:     command(0x00 + (offset & 0x0F));
  2742  05A4  0874               	movf	LCD_goto@offset,w
  2743  05A5  390F               	andlw	15
  2744  05A6  3185  25BA         	fcall	_command
  2745  05A8  0008               	return
  2746  05A9                     __end_of_LCD_goto:	
  2747                           
  2748                           	psect	text5
  2749  052F                     __ptext5:	
  2750 ;; *************** function _LCD_clear *****************
  2751 ;; Defined at:
  2752 ;;		line 76 in file "./LCD.h"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;		None
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  j               1    6[COMMON] char 
  2757 ;;  n               1    5[COMMON] unsigned char 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  1    wreg      void 
  2760 ;; Registers used:
  2761 ;;		wreg, status,2, status,0, pclath, cstack
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2767 ;;      Params:         0       0       0       0       0       0       0       0
  2768 ;;      Locals:         2       0       0       0       0       0       0       0
  2769 ;;      Temps:          1       0       0       0       0       0       0       0
  2770 ;;      Totals:         3       0       0       0       0       0       0       0
  2771 ;;Total ram usage:        3 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; Hardware stack levels required when called:    2
  2774 ;; This function calls:
  2775 ;;		_command
  2776 ;;		_data
  2777 ;; This function is called by:
  2778 ;;		_main
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           
  2783                           ;psect for function _LCD_clear
  2784  052F                     _LCD_clear:	
  2785                           
  2786                           ;./LCD.h: 79:     int8_t j = 0;
  2787                           
  2788                           ;incstack = 0
  2789                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  2790  052F  01F6               	clrf	LCD_clear@j
  2791                           
  2792                           ;./LCD.h: 81:     for (j = 3; j >= 0; j--)
  2793  0530  3003               	movlw	3
  2794  0531  00F4               	movwf	??_LCD_clear
  2795  0532  0874               	movf	??_LCD_clear,w
  2796  0533  00F6               	movwf	LCD_clear@j
  2797  0534                     l1397:	
  2798                           
  2799                           ;./LCD.h: 82:     {;./LCD.h: 83:         command(0xB0 + j);
  2800  0534  0876               	movf	LCD_clear@j,w
  2801  0535  3EB0               	addlw	176
  2802  0536  3185  25BA  3185   	fcall	_command
  2803                           
  2804                           ;./LCD.h: 84:         command(0x10);
  2805  0539  3010               	movlw	16
  2806  053A  3185  25BA  3185   	fcall	_command
  2807                           
  2808                           ;./LCD.h: 85:         command(0x00);
  2809  053D  3000               	movlw	0
  2810  053E  3185  25BA  3185   	fcall	_command
  2811                           
  2812                           ;./LCD.h: 87:         for (n = 0; n < 132; n++)
  2813  0541  01F5               	clrf	LCD_clear@n
  2814  0542                     l1405:	
  2815                           
  2816                           ;./LCD.h: 88:         {;./LCD.h: 89:             data(0x00);
  2817  0542  3000               	movlw	0
  2818  0543  3185  25A9  3185   	fcall	_data
  2819                           
  2820                           ;./LCD.h: 90:         }
  2821  0546  3001               	movlw	1
  2822  0547  00F4               	movwf	??_LCD_clear
  2823  0548  0874               	movf	??_LCD_clear,w
  2824  0549  07F5               	addwf	LCD_clear@n,f
  2825  054A  3084               	movlw	132
  2826  054B  0275               	subwf	LCD_clear@n,w
  2827  054C  1C03               	skipc
  2828  054D  2D42               	goto	l1405
  2829                           
  2830                           ;./LCD.h: 91:     }
  2831  054E  30FF               	movlw	255
  2832  054F  00F4               	movwf	??_LCD_clear
  2833  0550  0874               	movf	??_LCD_clear,w
  2834  0551  07F6               	addwf	LCD_clear@j,f
  2835  0552  1BF6               	btfsc	LCD_clear@j,7
  2836  0553  0008               	return
  2837  0554  2D34               	goto	l1397
  2838  0555                     __end_of_LCD_clear:	
  2839                           
  2840                           	psect	text6
  2841  05A9                     __ptext6:	
  2842 ;; *************** function _data *****************
  2843 ;; Defined at:
  2844 ;;		line 46 in file "./LCD.h"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  data            1    wreg     unsigned char 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  data            1    3[COMMON] unsigned char 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2858 ;;      Params:         0       0       0       0       0       0       0       0
  2859 ;;      Locals:         1       0       0       0       0       0       0       0
  2860 ;;      Temps:          1       0       0       0       0       0       0       0
  2861 ;;      Totals:         2       0       0       0       0       0       0       0
  2862 ;;Total ram usage:        2 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    1
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		_LCD_clear
  2869 ;;		_LCD_write
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           
  2874                           ;psect for function _data
  2875  05A9                     _data:	
  2876                           
  2877                           ;incstack = 0
  2878                           ; Regs used in _data: [wreg+status,2+status,0]
  2879                           ;data@data stored from wreg
  2880  05A9  00F3               	movwf	data@data
  2881                           
  2882                           ;./LCD.h: 46: void data(unsigned char data);./LCD.h: 47: {;./LCD.h: 48:     LATC2 = 0;
  2883  05AA  0022               	movlb	2	; select bank2
  2884  05AB  110E               	bcf	14,2	;volatile
  2885                           
  2886                           ;./LCD.h: 49:     LATC0 = 1;
  2887  05AC  140E               	bsf	14,0	;volatile
  2888                           
  2889                           ;./LCD.h: 51:     packet = data;
  2890  05AD  0873               	movf	data@data,w
  2891  05AE  00F2               	movwf	??_data
  2892  05AF  0872               	movf	??_data,w
  2893  05B0  0020               	movlb	0	; select bank0
  2894  05B1  00A5               	movwf	_packet
  2895                           
  2896                           ;./LCD.h: 53:     transmitFlag = 1;
  2897  05B2  01FA               	clrf	_transmitFlag
  2898  05B3  0AFA               	incf	_transmitFlag,f
  2899  05B4                     l1295:	
  2900                           ;./LCD.h: 54:     while (transmitFlag);
  2901                           
  2902  05B4  087A               	movf	_transmitFlag,w
  2903  05B5  1D03               	btfss	3,2
  2904  05B6  2DB4               	goto	l1295
  2905                           
  2906                           ;./LCD.h: 56:     LATC2 = 0;
  2907  05B7  0022               	movlb	2	; select bank2
  2908  05B8  110E               	bcf	14,2	;volatile
  2909                           
  2910                           ;./LCD.h: 58:     return;
  2911  05B9  0008               	return
  2912  05BA                     __end_of_data:	
  2913                           
  2914                           	psect	text7
  2915  05BA                     __ptext7:	
  2916 ;; *************** function _command *****************
  2917 ;; Defined at:
  2918 ;;		line 31 in file "./LCD.h"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  command         1    wreg     unsigned char 
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  command         1    3[COMMON] unsigned char 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      void 
  2925 ;; Registers used:
  2926 ;;		wreg, status,2, status,0
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2932 ;;      Params:         0       0       0       0       0       0       0       0
  2933 ;;      Locals:         1       0       0       0       0       0       0       0
  2934 ;;      Temps:          1       0       0       0       0       0       0       0
  2935 ;;      Totals:         2       0       0       0       0       0       0       0
  2936 ;;Total ram usage:        2 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; Hardware stack levels required when called:    1
  2939 ;; This function calls:
  2940 ;;		Nothing
  2941 ;; This function is called by:
  2942 ;;		_LCD_init
  2943 ;;		_LCD_clear
  2944 ;;		_LCD_goto
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           
  2949                           ;psect for function _command
  2950  05BA                     _command:	
  2951                           
  2952                           ;incstack = 0
  2953                           ; Regs used in _command: [wreg+status,2+status,0]
  2954                           ;command@command stored from wreg
  2955  05BA  00F3               	movwf	command@command
  2956                           
  2957                           ;./LCD.h: 31: void command(unsigned char command);./LCD.h: 32: {;./LCD.h: 33:     LATC2 
      +                          = 0;
  2958  05BB  0022               	movlb	2	; select bank2
  2959  05BC  110E               	bcf	14,2	;volatile
  2960                           
  2961                           ;./LCD.h: 34:     LATC0 = 0;
  2962  05BD  100E               	bcf	14,0	;volatile
  2963                           
  2964                           ;./LCD.h: 36:     packet = command;
  2965  05BE  0873               	movf	command@command,w
  2966  05BF  00F2               	movwf	??_command
  2967  05C0  0872               	movf	??_command,w
  2968  05C1  0020               	movlb	0	; select bank0
  2969  05C2  00A5               	movwf	_packet
  2970                           
  2971                           ;./LCD.h: 38:     transmitFlag = 1;
  2972  05C3  01FA               	clrf	_transmitFlag
  2973  05C4  0AFA               	incf	_transmitFlag,f
  2974  05C5                     l1037:	
  2975                           ;./LCD.h: 39:     while (transmitFlag);
  2976                           
  2977  05C5  087A               	movf	_transmitFlag,w
  2978  05C6  1D03               	btfss	3,2
  2979  05C7  2DC5               	goto	l1037
  2980                           
  2981                           ;./LCD.h: 41:     LATC2 = 0;
  2982  05C8  0022               	movlb	2	; select bank2
  2983  05C9  110E               	bcf	14,2	;volatile
  2984                           
  2985                           ;./LCD.h: 43:     return;
  2986  05CA  0008               	return
  2987  05CB                     __end_of_command:	
  2988                           
  2989                           	psect	intentry
  2990  0004                     __pintentry:	
  2991 ;; *************** function _displayClock *****************
  2992 ;; Defined at:
  2993 ;;		line 110 in file "BLE_LCD.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;		None
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;		None
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  1    wreg      void 
  3000 ;; Registers used:
  3001 ;;		wreg, status,2, status,0
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3007 ;;      Params:         0       0       0       0       0       0       0       0
  3008 ;;      Locals:         1       0       0       0       0       0       0       0
  3009 ;;      Temps:          1       0       0       0       0       0       0       0
  3010 ;;      Totals:         2       0       0       0       0       0       0       0
  3011 ;;Total ram usage:        2 bytes
  3012 ;; Hardware stack levels used:    1
  3013 ;; This function calls:
  3014 ;;		Nothing
  3015 ;; This function is called by:
  3016 ;;		Interrupt level 1
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020  0004                     _displayClock:	
  3021                           
  3022                           ;incstack = 0
  3023  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3024                           
  3025                           ; Regs used in _displayClock: [wreg+status,2+status,0]
  3026  0005  3180               	pagesel	$
  3027                           
  3028                           ;BLE_LCD.c: 112:     if (TMR0IF && TMR0IE && transmitFlag)
  3029  0006  0020               	movlb	0	; select bank0
  3030  0007  1E90               	btfss	16,5	;volatile
  3031  0008  2835               	goto	i1l147
  3032  0009  0021               	movlb	1	; select bank1
  3033  000A  1E90               	btfss	16,5	;volatile
  3034  000B  2835               	goto	i1l147
  3035  000C  087A               	movf	_transmitFlag,w
  3036  000D  1903               	btfsc	3,2
  3037  000E  2835               	goto	i1l147
  3038                           
  3039                           ;BLE_LCD.c: 113:     {;BLE_LCD.c: 114:         if (packetIndex < 8)
  3040  000F  3008               	movlw	8
  3041  0010  027B               	subwf	_packetIndex,w
  3042  0011  1803               	skipnc
  3043  0012  282F               	goto	i1l1261
  3044                           
  3045                           ;BLE_LCD.c: 115:         {;BLE_LCD.c: 116:             LATA2 = ~LATA2;
  3046  0013  3004               	movlw	4
  3047  0014  0022               	movlb	2	; select bank2
  3048  0015  068C               	xorwf	12,f
  3049                           
  3050                           ;BLE_LCD.c: 117:             LATC5 = ~LATC5;
  3051  0016  3020               	movlw	32
  3052  0017  068E               	xorwf	14,f
  3053                           
  3054                           ;BLE_LCD.c: 119:             if (LATA2 == 0)
  3055  0018  190C               	btfsc	12,2	;volatile
  3056  0019  2827               	goto	i1l1257
  3057                           
  3058                           ;BLE_LCD.c: 120:             {;BLE_LCD.c: 121:                 LATA1 = (packet & 0b10000
      +                          000) && 1;
  3059  001A  01F1               	clrf	_displayClock$87
  3060  001B  0020               	movlb	0	; select bank0
  3061  001C  1FA5               	btfss	_packet,7
  3062  001D  2820               	goto	i1l1255
  3063  001E  01F1               	clrf	_displayClock$87
  3064  001F  0AF1               	incf	_displayClock$87,f
  3065  0020                     i1l1255:	
  3066  0020  0C71               	rrf	_displayClock$87,w
  3067  0021  0022               	movlb	2	; select bank2
  3068  0022  1C03               	skipc
  3069  0023  108C               	bcf	12,1	;volatile
  3070  0024  1803               	skipnc
  3071  0025  148C               	bsf	12,1	;volatile
  3072                           
  3073                           ;BLE_LCD.c: 122:             }
  3074  0026  2833               	goto	i1l1265
  3075  0027                     i1l1257:	
  3076                           
  3077                           ;BLE_LCD.c: 124:             {;BLE_LCD.c: 125:                 packet <<= 1;
  3078  0027  1003               	clrc
  3079  0028  0020               	movlb	0	; select bank0
  3080  0029  0DA5               	rlf	_packet,f
  3081                           
  3082                           ;BLE_LCD.c: 126:                 packetIndex++;
  3083  002A  3001               	movlw	1
  3084  002B  00F0               	movwf	??_displayClock
  3085  002C  0870               	movf	??_displayClock,w
  3086  002D  07FB               	addwf	_packetIndex,f
  3087  002E  2833               	goto	i1l1265
  3088  002F                     i1l1261:	
  3089                           
  3090                           ;BLE_LCD.c: 130:         {;BLE_LCD.c: 131:             packetIndex = 0;
  3091  002F  01FB               	clrf	_packetIndex
  3092                           
  3093                           ;BLE_LCD.c: 132:             transmitFlag = 0;
  3094  0030  01FA               	clrf	_transmitFlag
  3095                           
  3096                           ;BLE_LCD.c: 133:             LATC5 = 0;
  3097  0031  0022               	movlb	2	; select bank2
  3098  0032  128E               	bcf	14,5	;volatile
  3099  0033                     i1l1265:	
  3100                           
  3101                           ;BLE_LCD.c: 136:         TMR0IF = 0;
  3102  0033  0020               	movlb	0	; select bank0
  3103  0034  1290               	bcf	16,5	;volatile
  3104  0035                     i1l147:	
  3105  0035  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3106  0036  0009               	retfie
  3107  0037                     __end_of_displayClock:	
  3108  007E                     btemp	set	126	;btemp
  3109  007E                     int$flags	set	126
  3110  007E                     wtemp0	set	126


Data Sizes:
    Strings     64
    Constant    0
    Data        0
    BSS         1
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      5       6
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    LCD_write_S@string	PTR unsigned char  size(2) Largest target is 16
		 -> STR_6(CODE[16]), STR_5(CODE[16]), STR_4(CODE[16]), STR_3(CODE[16]), 
		 -> STR_2(CODE[16]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_LCD_write_S
    _LCD_write_S->_LCD_write
    _LCD_write->_data
    _LCD_init->_command
    _LCD_goto->_command
    _LCD_clear->_command
    _LCD_clear->_data

Critical Paths under _displayClock in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_write_S

Critical Paths under _displayClock in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _displayClock in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _displayClock in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _displayClock in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _displayClock in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _displayClock in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _displayClock in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2140
                                              4 BANK0      1     1      0
                          _LCD_clear
                           _LCD_goto
                           _LCD_init
                        _LCD_write_S
 ---------------------------------------------------------------------------------
 (1) _LCD_write_S                                          7     3      4    1272
                                              7 COMMON     3     3      0
                                              0 BANK0      4     0      4
                          _LCD_write
 ---------------------------------------------------------------------------------
 (2) _LCD_write                                            3     3      0      62
                                              4 COMMON     3     3      0
                               _data
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0      22
                            _command
 ---------------------------------------------------------------------------------
 (1) _LCD_goto                                             2     1      1     620
                                              4 COMMON     2     1      1
                            _command
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            3     3      0     226
                                              4 COMMON     3     3      0
                            _command
                               _data
 ---------------------------------------------------------------------------------
 (3) _data                                                 2     2      0      31
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _command                                              2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _displayClock                                         2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_clear
     _command
     _data
   _LCD_goto
     _command
   _LCD_init
     _command
   _LCD_write_S
     _LCD_write
       _data

 _displayClock (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      12       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      5       6       6        7.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      12      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Jun 04 17:17:54 2019

            __CFG_CP$OFF 0000            ?_displayClock 0070              __CFG_LVP$ON 0000  
                    _GIE 005F                      u265 0586             __CFG_CPD$OFF 0000  
                   l1037 05C5                     l1301 0058                     l1311 00D0  
                   l1303 0070                     l1321 0148                     l1313 00E8  
                   l1305 0088                     l1331 01C0                     l1323 0160  
                   l1315 0100                     l1307 00A0                     l1405 0542  
                   l1341 0238                     l1333 01D8                     l1325 0178  
                   l1317 0118                     l1309 00B8                     l1421 057B  
                   l1351 02B0                     l1343 0250                     l1335 01F0  
                   l1327 0190                     l1319 0130                     l1361 0328  
                   l1353 02C8                     l1345 0268                     l1337 0208  
                   l1329 01A8                     l1507 0420                     l1371 03A0  
                   l1363 0340                     l1355 02E0                     l1347 0280  
                   l1339 0220                     l1373 03B8                     l1365 0358  
                   l1357 02F8                     l1349 0298                     l1295 05B4  
                   l1375 03D0                     l1367 0370                     l1359 0310  
                   l1383 0418                     l1463 04C8                     l1377 03E8  
                   l1369 0388                     l1379 0400                     l1299 0040  
                   l1397 0534             _transmitFlag 007A                     STR_1 05FB  
                   STR_2 05EB                     STR_3 05DB                     STR_4 05CB  
                   STR_5 05DB                     STR_6 05EB                     _T0EN 00BF  
                   _PEIE 005E                     _TMR0 0015             __CFG_WRT$OFF 0000  
          __CFG_FCMEN$ON 0000                     _data 05A9                     _main 049B  
                   fsr0h 0005                     indf0 0000                     fsr0l 0004  
                   btemp 007E            __CFG_BOREN$ON 0000            __CFG_BORV$LOW 0000  
                   start 0037       __size_of_LCD_clear 0026            __CFG_CSWEN$ON 0000  
          __CFG_MCLRE$ON 0000             ?_LCD_write_S 0020           LCD_goto@offset 0074  
     __size_of_LCD_write 045D           ??_displayClock 0070         __end_of_LCD_init 0579  
       __end_of_LCD_goto 05A9                    ?_data 0070                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _LATA1 0861                    _LATA2 0862  
                  _LATC0 0870                    _LATC1 0871                    _LATA5 0865  
                  _LATC2 0872                    _LATC4 0874                    _LATC5 0875  
         __CFG_DEBUG$OFF 0000                    i1l147 0035                    _TMR0H 0016  
                  _TRISA 008C                    _TRISC 008E          __end_of_command 05CB  
                  status 0003                    wtemp0 007E          __initialization 0039  
           __end_of_data 05BA             __end_of_main 052F                   ??_data 0072  
                 ??_main 0024        __end_of_LCD_clear 0555        __end_of_LCD_write 049B  
                 _ANSELA 018C                   _ANSELC 018E       __CFG_RSTOSC$HFINT1 0000  
                 _T0CON1 0018                   i1l1261 002F                   i1l1255 0020  
                 i1l1265 0033                   i1l1257 0027                   _OSCFRQ 091F  
                 _TMR0IE 0485                   _TMR0IF 0085           __CFG_PWRTE$OFF 0000  
         __CFG_STVREN$ON 0000                   _packet 0025                ??_command 0072  
   __end_of_displayClock 0037  __end_of__initialization 003A                ?_LCD_init 0070  
              ?_LCD_goto 0074             LCD_goto@page 0075           command@command 0073  
         __pcstackCOMMON 0070     __size_of_LCD_write_S 001F               __pnvCOMMON 007A  
             ??_LCD_init 0074               ??_LCD_goto 0075               __pmaintext 049B  
           LCD_write_S@i 0078          __CFG_PPS1WAY$ON 0000               __pintentry 0004  
                _OSCCON1 0919                  __ptext1 0579                  __ptext2 003E  
                __ptext3 0555                  __ptext4 0598                  __ptext5 052F  
                __ptext6 05A9                  __ptext7 05BA                  _command 05BA  
  __size_of_displayClock 0033                _LCD_clear 052F     end_of_initialization 003A  
              _LCD_write 003E       LCD_write@character 0076             _displayClock 0004  
       __CFG_FEXTOSC$OFF 0000               ?_LCD_clear 0070               ?_LCD_write 0070  
      __size_of_LCD_init 0024        __size_of_LCD_goto 0011               LCD_clear@j 0076  
             LCD_clear@n 0075      start_initialization 0039            ??_LCD_write_S 0077  
       __CFG_LPBOREN$OFF 0000              __pbssCOMMON 007B                ___latbits 0001  
          __pcstackBANK0 0020              ??_LCD_clear 0074              ??_LCD_write 0074  
              __pnvBANK0 0025      __end_of_LCD_write_S 0598                 ?_command 0070  
               _LCD_init 0555                 _LCD_goto 0598        LCD_write_S@length 0022  
            _packetIndex 007B        LCD_write_S@string 0020              _LCD_write_S 0579  
       __size_of_command 0011                 data@data 0073            __size_of_data 0011  
          __size_of_main 0094          _displayClock$87 0071                 int$flags 007E  
               intlevel1 0000        __CFG_CLKOUTEN$OFF 0000            __pstringtext1 05CB  
          __pstringtext2 05DB            __pstringtext3 05EB            __pstringtext4 05FB  
          __pstringtext5 0000  
